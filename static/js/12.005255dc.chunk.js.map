{"version":3,"file":"static/js/12.005255dc.chunk.js","mappings":"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","sources":["components/AddCard/RadioBtns.jsx","components/MainDashboard/Filters.jsx","components/MainDashboard/BtnAddColumn.jsx","components/PopColumn/PopColumn.jsx","components/MainDashboard/BtnAddCard.jsx","components/AddCard/Calendar.jsx","components/AddCard/AddCard.jsx","components/MainDashboard/TitleCards.jsx","components/Card/Card.jsx","components/TasksList/TasksList.jsx","components/MainDashboard/MainDashboard.jsx","components/ScreensPage/ScreensPage.jsx","pages/HomePage.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport scss from 'styles/index.module.scss';\nimport { indigo, pink, lightGreen, grey } from '@mui/material/colors';\nimport { FormControlLabel, Typography, Radio } from '@mui/material';\nimport { useAuth } from 'hooks';\nimport { useBoards } from 'hooks';\nimport { useDispatch } from 'react-redux';\nimport { setPriorityFilter } from 'redux/filter/filterSlice';\n\nexport const RadioBtns = ({ parentComponent, priority }) => {  // встановлена раніше та передана сюди пріоритетність для дефолтного стану (у подальшому підлягає редагуванню)\n   const dispatch = useDispatch();\n  const { filter } = useBoards();\n    const { user } = useAuth();\n    const [selectedPriorityFilter, setSelectedPriorityFilter] = useState(filter);\n  const [selectedPriority, setSelectedPriority] = useState(\n    parentComponent === 'FiltersModal'\n      ? 'none'\n      : priority\n      ? priority\n      : 'without'\n  );  \n\n  // console.log('selectedPriority:', selectedPriority);\n  \nuseEffect(() => {\n    dispatch(setPriorityFilter(selectedPriorityFilter));\n  }, [dispatch, selectedPriorityFilter]);\n\n  // if (id) {\n  //   dispatch(\n  //     operation({\n  //       selectedPriority,\n  //       taskOwner: idColumn,\n  //       idTask: id,\n  //       boardId: boardName,\n  //     })\n  //   );\n  // } else {\n  //   dispatch(\n  //     operation({ selectedPriority, taskOwner: idColumn, boardId: boardName })\n  //   );\n  // }\n\n  const controlProps = item => ({\n    // low, medium, high, without\n    value: item,\n    onChange:\n      parentComponent === 'FiltersModal'\n        ? e => setSelectedPriorityFilter(e.target.value)\n        : e => setSelectedPriority(e.target.value),\n    checked:\n      parentComponent === 'FiltersModal'\n        ? selectedPriorityFilter === item\n        : selectedPriority === item,\n    name: 'priority',\n    inputProps: { 'aria-label': item },\n  });\n\n  const priorityStyles = \n    parentComponent === 'FiltersModal' \n    ? {\n        without: grey[400],  \n        low: indigo[200],\n        medium: pink[200],\n        high: lightGreen[200],    \n      }\n    :\n      {\n        low: indigo[200],\n        medium: pink[200],\n        high: lightGreen[200],\n        without: grey[400],      \n      }\n\n  function capitalizeFirstLetter(priority) {\n    return priority.charAt(0).toUpperCase() + priority.slice(1);\n  }\n\n  return (\n    <div>\n      <h3 className={scss.OBFiltersModalLabel}>Label color</h3>\n      <div className={ `${parentComponent === 'FiltersModal' ? scss.OBFiltersModalRadioGroupV : scss.OBFiltersModalRadioGroupH }`}>\n        {Object.keys(priorityStyles).map((priority) => (       //['low', 'medium', 'high', 'without'])\n          <FormControlLabel\n            key={priority}\n            label={ parentComponent === 'FiltersModal' \n              ? (\n                  <Typography \n                    style={{\n                      fontSize: '12px', \n                      fontFamily: 'Poppins, sans-serif', \n                      color: user.theme === 'dark' ? 'rgba(255, 255, 255, 0.50)' : 'rgba(22, 22, 22, 0.50)',\n                    }}\n                    sx={{\n                      '&.Mui-checked': {\n                        color: priorityStyles[priority], // Change label text color when checked\n                      },\n                    }}\n                  >\n                    {priority === 'without' ? 'Without priority' : capitalizeFirstLetter(priority)}\n                  </Typography>\n              ) \n              : null\n            }\n            // labelPlacement={ parentComponent === 'FiltersModal' ? \"end\" : null }\n            className={ parentComponent === 'FiltersModal' ? scss.OBFiltersModalRadioLabelV : scss.OBFiltersModalRadioLabelH}\n            control={\n              <Radio \n                className={scss.OBFiltersModalRadioBtn}\n                {...controlProps(priority)}\n                sx={{\n                  color: priorityStyles[priority],\n                  '&.Mui-checked': {\n                    color: priorityStyles[priority],\n                  },\n                  '&.Mui-checked .MuiSvgIcon-root': {\n                    fontSize: '17px',\n                  },\n                  '&:not(.Mui-checked) .MuiSvgIcon-root': {\n                    fontSize: '14px',\n                    backgroundColor: priorityStyles[priority],\n                    borderRadius: '50%',\n                  },\n                }}\n              />\n            }\n          />\n        ))}\n      </div>\n  </div>\n  );\n};\n","// 💙💛 Kostiantyn Koshyk\nimport { useState, useEffect } from 'react';\nimport styles from 'styles/index.module.scss';\nimport SvgSprite from 'images/sprite.svg';\nimport { useBoards } from 'hooks';\nimport { RadioBtns } from '../AddCard/RadioBtns';\nimport { useAuth } from 'hooks';\n\nimport { useDispatch } from 'react-redux';\nimport { setPriorityFilter } from 'redux/filter/filterSlice';\n\nexport const Filters = ({ className }) => {\n  const dispatch = useDispatch();\n  const [isFilterVisible, setIsFilterVisible] = useState(false);\n  const { boardById } = useBoards();\n  const { user } = useAuth();\n\n  \n  const handleShowAll = () => {\n    dispatch(setPriorityFilter('all'));\n  }\n\n  const onOpenFilter = () => {\n    setIsFilterVisible(true);\n  };\n  const onCloseFilter = () => {\n    setIsFilterVisible(false);\n  }; \n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        setIsFilterVisible(false);\n     };\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [isFilterVisible]);\n\n\n  return (\n    <div className={`${className} ${styles.OBFilterModalContainer}`} data-theme={user.theme}>\n      <div className={styles.KkWrapFilters}>\n        <h2\n          className={styles.KkTitle}\n          style={{ padding: !boardById.background && '4px' }}\n        >\n          {boardById.title}\n        </h2>\n        {/* <h2 className={styles.KkTitle}>{boardById.title}</h2> */}\n\n        <button type='button' className={styles.KkBtnFilters} onClick={onOpenFilter}>\n          <svg width=\"16px\" height=\"16px\">\n            <use href={`${SvgSprite}#icon-filter`}></use>\n          </svg>\n          <p>Filters</p>\n        </button>\n\n        {isFilterVisible && (\n            <div className={styles.OBFiltersModalContainer} style={{ opacity: isFilterVisible ? 1 : 0 }} data-theme={user.theme}>\n              <button type='button' className={styles.OBFilterBtnIcon} aria-label='close' onClick={onCloseFilter}>\n                <svg  width=\"18\" height=\"18\">\n                    <use className='icon' href={SvgSprite + '#icon-close'} />\n                </svg>\n              </button>\n              <h4 className={styles.OBFiltersModalTitle}>Filters</h4>\n              <hr className={styles.OBFiltersModalSeparator} />  \n              <div className={styles.OBFiltersModalContent}>\n                  <RadioBtns parentComponent={'FiltersModal'} />\n                  <p className={styles.OBFiltersModalShow} onClick={handleShowAll}>Show all</p>\n              </div>\n            </div>\n        )} \n      </div>\n    </div>\n  );\n};\n","// 💙💛 Kostiantyn Koshyk\nimport styles from 'styles/index.module.scss';\nimport SvgSprite from 'images/sprite.svg';\nimport clsx from 'clsx';\n\nexport const BtnAddColumn = ({ className, title, theme, onClick }) => {\n  return (\n    <div className={className}>\n      <button\n        className={clsx(styles.KkBtnColumn, styles[theme])}\n        onClick={onClick}\n      >\n        <div className={clsx(styles.KkIconPlusColumn, styles[theme])}>\n          <svg className={clsx(styles[theme])} width=\"14px\" height=\"14px\">\n            <use href={`${SvgSprite}#icon-plus`}></use>\n          </svg>\n        </div>\n        <p className={clsx(styles[theme])}>{title}</p>\n      </button>\n    </div>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport scss from 'styles/index.module.scss';\nimport SvgSprite from 'images/sprite.svg';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useAuth } from 'hooks';\n\nexport const PopColumn = ({\n  modalTitle,\n  modalBtnTitle,\n  onClose,\n  operation,\n  idColumn,\n  infoData,\n}) => {\n  const { user } = useAuth();\n  const boardId = useParams();\n  const dispatch = useDispatch();\n  const [valueInput, setvalueInput] = useState(\n    infoData ? { title: infoData.title } : { title: '' }\n  );\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setvalueInput(prev => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const dataSubmit = idColumn\n      ? {\n          title: valueInput.title,\n          idColumn: idColumn,\n        }\n      : {\n          title: valueInput.title,\n          board: boardId.boardName,\n        };\n    dispatch(operation(dataSubmit));\n\n    onClose();\n  };\n\n  return (\n    <div className={scss.AAColumnContainer} data-theme={user.theme}>\n      <h4 className={scss.AAColumnTitle}>{modalTitle}</h4>\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\n        <label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Title\"\n            autoFocus\n            required\n            className={scss.AAColumnInput}\n            value={valueInput.title || ''}\n            onChange={handleChange}\n          />\n        </label>\n        <button type=\"submit\" className={scss.AAColumnBtn}>\n          <div className={scss.AAColumnSvgContainer}>\n            <svg className={scss.AAColumnSvg}>\n              <use href={SvgSprite + '#icon-plus'} />\n            </svg>\n          </div>\n          {modalBtnTitle}\n        </button>\n      </form>\n    </div>\n  );\n};\n\n// export default PopColumn;\n","// 💙💛 Kostiantyn Koshyk\nimport styles from 'styles/index.module.scss';\nimport SvgSprite from 'images/sprite.svg';\nimport clsx from 'clsx';\n\nexport const BtnAddCard = ({ title, className, theme, onClick }) => {\n  return (\n    <div className={className}>\n      <button\n        className={clsx(styles.KkBtnCard, styles[theme])}\n        onClick={onClick}\n      >\n        <div className={clsx(styles.KkIconPlusCard, styles[theme])}>\n          <svg className={clsx(styles[theme])} width=\"14px\" height=\"14px\">\n            <use href={`${SvgSprite}#icon-plus`}></use>\n          </svg>\n        </div>\n        <p className={clsx(styles[theme])}>{title}</p>\n      </button>\n    </div>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport scss from '../../styles/index.module.scss';\nimport SvgSprite from '../../images/sprite.svg';\nimport dayjs from 'dayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { DatePicker } from '@mui/x-date-pickers';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { InputAdornment } from '@mui/material';\nimport { useAuth } from 'hooks';\n\n\n\n\nexport const Calendar = ({ deadline, onFormatDeadline }) => { // deadline з AddCard\n  const { user } = useAuth();\n  const [inputWidth, setInputWidth] = useState('auto');\n  const [isCalendarOpen, setIsCalendarOpen] = useState(false);\n  const [selectedDate, setSelectedDate] = useState(\n  deadline ? dayjs(deadline, 'DD/MM/YYYY') : dayjs()\n  ); // dayjs() - currentDate\n\n    //selectedDate = M {$L: 'en', $u: undefined, $d: Tue Aug 29 2023 08:05:53 GMT+0300 (за східноєвропейським літнім часом), $x: {…}, $y: 2023, …}\n  // deadline ? dayjs(deadline, 'DD/MM/YYYY').format(\"dddd, MMMM D\") : dayjs()\n\n  // console.log(deadline) //01/09/2023\n  // console.log(dayjs(deadline)) // M {... Mon Jan 09 2023 00:00:00 ...} - міняє день і місяць місцями\n  // console.log(dayjs(deadline, 'DD/MM/YYYY')); // M {... Fri Sep 01 2023 00:00:00 ...} - тепер все Ок\n  // Тепер бібліотека Material UA застосує формат \"dddd, MMMM D\" і отримаємо те, що треба:\n  // console.log(dayjs(deadline, 'DD/MM/YYYY').format(\"dddd, MMMM D\")); // Thursday, August 31\n\n  // \"Today, September 01\" або \"Saturday, September 02\"\n  const dateFormat =\n    dayjs(selectedDate).format('dddd, MMMM D') ===\n    dayjs().format('dddd, MMMM D')\n      ? '[Today,] MMMM D'\n      : 'dddd, MMMM D';\n\n  //------------------ Ширина інпута DatePicker---------------------\n  useEffect(() => {\n    const contentWidth = selectedDate.format(dateFormat).length * 9;\n    setInputWidth(`${contentWidth}px`);\n  }, [selectedDate, dateFormat]);\n\n  //-----------------Передача даних в AddCard-----------------------\n  useEffect(() => {\n    const formatedSelectedDate = dayjs(selectedDate).format('DD/MM/YYYY'); // 29/11/2023\n    onFormatDeadline && onFormatDeadline(formatedSelectedDate);\n  }, [selectedDate, onFormatDeadline]);\n\n//--------------------Створення теми--------------------------------\n\n  const theme = createTheme({\n    typography: {\n      fontFamily: ['Poppins', 'sans-serif'].join(','), // інпут\n    },\n    components: {\n      MuiPaper: { // полотно календаря\n        styleOverrides: {\n          root: {\n            position: 'relative',\n            width: '233px',\n            height: '254px',\n            padding: '18px',\n            background: user.theme === 'dark' ? '#1F1F1F' : '#FFF',\n            border: '1px solid',\n            borderRadius: '8px',\n            borderColor: user.theme === 'violet' ? '#585bbe' : '#bedfad',\n          },\n        },\n      },\n      MuiPickersDay: { // усі дні\n        styleOverrides: {\n            root: {\n                width: '23px',\n                height: '23px',\n                fontSize: '14px',\n                fontweight: '400',\n                lineHeight: '18px',\n                '&:hover': {\n                    backgroundColor: user.theme === 'violet' ? '#8d8fc9' : '#9fd186',\n                },\n            },\n            dayOutsideMonth: { // місяць\n              color: user.theme === 'dark' ? '#FFF' : '#161616',  \n            },\n            dayWithMargin: {// видимі дати за межами місяця\n              color: user.theme === 'dark' ? 'rgba(255, 255, 255, 0.20)' : 'rgba(22, 22, 22, 0.20)',   \n              '&.Mui-disabled:not(.Mui-selected)': { // минулі дати, які не можна обрати\n                color: user.theme === 'dark' ? 'rgba(255, 255, 255, 0.20)' : 'rgba(22, 22, 22, 0.20)',\n              }, \n            },  \n        },\n      },\n      MuiPickersLayout: { // полотно календаря без падінгів\n        styleOverrides: {\n            root: {\n                width: '197px',\n            },\n        },\n      },\n      MuiDateCalendar: {   // полотно календаря без падінгів\n        styleOverrides: {\n            root: {\n                width: '197px',\n            },\n        },\n     },\n     MuiPickersFadeTransitionGroup: {\n        styleOverrides: {\n            root: {\n                color: '#161616',\n                fontFamily: 'Poppins, sans-serif',\n                fontSize: '16px',\n                fontWeight: 500,\n                letterSpacing: '-0.32px',\n            },\n        },\n     },\n     MuiDayCalendar: {\n      styleOverrides: {\n        slideTransition: {\n          minHeight: '155px', // обмежуємо висоту полотна календаря\n        },\n        header: { \n          marginTop: '14px',  // висота лінійки з днями тижня\n        },\n        weekDayLabel: {\n          height: '23px',  // висота кожного дня тижня\n          width: '23px',\n          color: user.theme === 'dark' ? 'rgba(255, 255, 255, 0.50)' : 'rgba(22, 22, 22, 0.50)',    // rgba(255, 255, 255, 0.50);\n          fontFamily: 'Poppins, sans-serif',\n          fontSize: '14px',\n          fontWeight: 500,\n          lineHeight: 'normal',\n          letterSpacing: '-0.28px',\n        },\n      },\n     },   \n     MuiPickersCalendarHeader: {   \n        styleOverrides: {\n            root: {\n                padding: 0,\n                margin: 0,\n                borderBottom: '1px solid',\n                borderBottomColor: user.theme === 'dark' ? 'rgba(255, 255, 255, 0.20)' : 'rgba(22, 22, 22, 0.20)',\n            },\n            label: {\n                margin: 0,\n                paddingBottom: '14px',\n                color: user.theme === 'dark' ? '#FFF' : '#161616',\n            },\n            labelContainer: {\n                marginRight: 'auto',\n                marginLeft: 'auto',\n            },\n        },\n     },\n     MuiPickersArrowSwitcher: {\n        styleOverrides: {\n          spacer: {\n            width: 0,\n          },\n        },\n     },\n    },\n    palette: {\n      primary: {\n        main: '#BEDBB0', // без цього не працює\n        dark: user.theme === 'violet' ? '#8d8fc9' : '#9fd186', // обраний колір дня\n      },\n    },\n  });\n\n\n  return (\n    <div>\n    <LocalizationProvider dateAdapter={AdapterDayjs}> {/* dateAdapter={AdapterDayjs} - вказуємо, що під капотом використовуємо бібліотеку Day.js (її методи) */}\n      <ThemeProvider theme={theme}>\n        <DatePicker\n          open={isCalendarOpen}\n          onClose={() => setIsCalendarOpen(false)} // закриття календаря\n          onChange={date => setSelectedDate(date)} //Material UA в date записує обрану з календаря дату\n          // M {$L: 'en', $u: undefined, $d: Fri Sep 01 2023 09:13:29 GMT+0300 (за східноєвропейським літнім часом), $x: {…}, $y: 2023, …}\n          value={selectedDate}\n          format={dateFormat} // приймає рядок\n          disablePast={true} // минулі дати не обируться\n          dayOfWeekFormatter={day => day.slice(0, 2)}// видимі перші 2 літери назви дня тижня          \n          showDaysOutsideCurrentMonth\n          slots={{\n            openPickerButton: () => null, \n          }}\n          slotProps={{\n            switchViewButton: { sx: { display: 'none' } }, // стрілка вниз поряд з місяцем і роком\n            previousIconButton: {   // кнопка <\n                sx: {\n                  position: 'absolute',\n                  top: '5px',\n                  left: '5px',\n                  size: 'small',\n                  color: user.theme === 'violet' ? '#5255BC' : '#BEDBB0',  // серединка\n                  stroke: 'none', // обводка\n                },\n            },\n            nextIconButton: {  // кнопка >\n                sx: {\n                  position: 'absolute',\n                  top: '5px',\n                  right: '5px',\n                  color: user.theme === 'violet' ? '#5255BC' : '#BEDBB0',  // серединка\n                  stroke: 'none', // обводка\n                },\n            },\n            textField: {\n              fullWidth: false,\n              onClick: () => setIsCalendarOpen(true), // інпут стає клікабельним; по кліку відкривається календар (picker)\n              variant: 'standard',\n              size: 'small',\n              sx: {\n                width: inputWidth,\n                minWidth: '130px',\n              },\n              InputProps: {\n                disableUnderline: true, // прибирає дефолтний нижній бордер\n                'aria-label': 'deadline',\n                style: {\n                  fontSize: '14px',\n                  fontFamily: 'Poppins, sans-serif',\n                  color: user.theme === 'violet' ? '#5255BC' : '#BEDBB0', // колір тексту\n                  fontWeight: 500,\n                },\n                endAdornment: (  // розташування іконки - в кінці інпуту (є і startAdornment)\n                  <InputAdornment\n                    position=\"start\"\n                    sx={{ cursor: 'pointer' }}\n                  >\n                    <svg className={scss.OBAddDateIcon} width=\"18px\">\n                      <use\n                        href={SvgSprite + '#icon-chevron-down'} // стрілка вниз в календарі\n                        aria-label=\"open calendar\"\n                        edge=\"start\"\n                      />\n                    </svg>\n                  </InputAdornment>\n                ),\n              },\n            },\n          }}\n        />\n      </ThemeProvider>\n      </LocalizationProvider>\n    </div>\n  );\n};\n\n\n\n\n\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport scss from 'styles/index.module.scss';\nimport SvgSprite from 'images/sprite.svg';\nimport { useAuth } from 'hooks';\nimport { useParams } from 'react-router-dom';\nimport { RadioBtns } from './RadioBtns';\nimport { Calendar } from './Calendar';\n\n\nexport const AddCard = ({\n  modalTitle,\n  modalBtnTitle,\n  idColumn,  // тут і нижче для редагування\n  id,\n  cardTitle,\n  description,\n  priority,\n  deadline,\n  onClose,\n  operation,\n}) => {\n  const { user } = useAuth();\n  const dispatch = useDispatch();\n  const { boardName } = useParams();\n\n  const [titleValue, setTitleValue] = useState(cardTitle); // для редагування\n  const [descriptionValue, setDescriptionValue] = useState(description); // для редагування\n  const [inputDeadline, setInputDeadline] = useState(null);\n  \n\n  const onHandleFormatDeadline = (formatedSelectedDate) => {\n    setInputDeadline(formatedSelectedDate);\n  };\n\n  //------------------------------------- Submit -------------------------------------------\n\n  const handleFormSubmit = event => {   // відправка даних\n    event.preventDefault();\n\n    const inputTitle = event.target.elements.title.value.trim();\n    let inputDescription = event.target.elements.description.value.trim();\n    const inputPriority = event.target.elements.priority.value;\n    \n\n    if (inputDescription === '') {\n      inputDescription = ' ';\n    }\n\n    const cardData = {\n      title: inputTitle,\n      description: inputDescription,\n      priority: inputPriority,\n      deadLine: inputDeadline,\n    };\n    // {title: 'The Watch Spot Design', description: \"Create a visually stunning and eye-catching watch dial design that embodies our brand's\", priority: 'without', deadline: '11/10/2023', taskOwner: '64f548eb24765a1e4837366e'}\n    // відправка на бекенд, а потім в стор редакса\n    if (id) {\n      dispatch(\n        operation({\n          ...cardData,\n          taskOwner: idColumn,\n          idTask: id,\n          boardId: boardName,\n        })\n      );\n    } else {\n      dispatch(\n        operation({ ...cardData, taskOwner: idColumn, boardId: boardName })\n      );\n    }\n\n    event.target.reset();\n\n    if (event.currentTarget === event.target) {\n      onClose();\n      document.body.style.overflow = 'visible'; //body почне скролитися після закриття модалки\n    }\n  };\n\n\n  return (\n    <div className={scss.OBAddContainer} data-theme={user.theme}>\n      <h4 className={scss.OBAddTitle}>{modalTitle}</h4>\n      <form onSubmit={handleFormSubmit} autoComplete=\"off\">\n        <label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Title\"\n            autoFocus\n            required\n            className={scss.OBAddInput}\n            defaultValue={titleValue} // для редагування\n            onChange={e => setTitleValue(e.target.value)} // для редагування\n          />\n        </label>\n        <label>\n          <textarea\n            type=\"text\"\n            name=\"description\"\n            placeholder=\"Description\"\n            className={`${scss.OBAddInput} ${scss.OBAddDescription}`}\n            defaultValue={descriptionValue} // для редагування\n            onChange={e => setDescriptionValue(e.target.value)} // для редагування\n          />\n        </label>\n\n        <RadioBtns parentComponent={'AddCard'} priority={priority} />\n\n        <div>\n          <p className={scss.OBAddlabel}>Deadline</p>\n          <Calendar deadline={deadline} onFormatDeadline={onHandleFormatDeadline} />\n        </div>\n\n        <button type=\"submit\" className={scss.OBAddSubmitBtn}>\n          <div className={scss.OBAddIconWrapper}>\n            <svg className={scss.OBAddSubmitIcon}>\n              <use href={SvgSprite + '#icon-plus'} />\n            </svg>\n          </div>\n          {modalBtnTitle}\n        </button>\n      </form>\n    </div>\n  );\n};","// 💙💛 Kostiantyn Koshyk\nimport styles from 'styles/index.module.scss';\nimport SvgSprite from 'images/sprite.svg';\nimport clsx from 'clsx';\n// import { cleanDigitSectionValue } from '@mui/x-date-pickers/internals/hooks/useField/useField.utils';\n\nexport const TitleCards = ({ className, title, theme, onEdit, onTrash }) => {\n  // const onIconPensil = () => {\n  //   console.log('icon pensil click');\n  // };\n\n  // const onIconTrash = () => {\n  //   console.log('icon trash click');\n  // };\n\n  return (\n    <div className={className}>\n      <div className={clsx(styles.KkWrapTitleCards, styles[theme])}>\n        <p className={clsx(styles[theme])}> {title}</p>\n        <div className={styles.KkSvgTitleCards}>\n          <button className={styles.KkBtnIcons} onClick={onEdit}>\n            <svg className={clsx(styles[theme])} width=\"16px\" height=\"16px\">\n              <use href={`${SvgSprite}#icon-pencil`}></use>\n            </svg>\n          </button>\n\n          <button className={styles.KkBtnIcons} onClick={onTrash}>\n            <svg className={clsx(styles[theme])} width=\"16px\" height=\"16px\">\n              <use href={`${SvgSprite}#icon-trash`}></use>\n            </svg>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport dayjs from 'dayjs';\nimport { Modal } from '../Modal/Modal';\nimport { AddCard } from '../AddCard/AddCard';\nimport scss from 'styles/index.module.scss';\nimport SvgSprite from 'images/sprite.svg';\nimport { deleteTasks, updateTasks } from 'redux/board/boardOperations';\nimport { useParams } from 'react-router-dom';\nimport { useAuth, useBoards } from 'hooks';\n\nconst getBgColor = (priority, color) => {\n  switch (priority) {\n   case 'low':\n     return '#8FA1D0';\n   case 'medium':\n     return 'rgba(224, 156, 181, 1)';\n   case 'high':\n     return '#BEDBB0';\n   case 'without':\n     return color; //'rgba(22, 22, 22, 0.30)'; //rgba(255, 255, 255, 0.30)\n   default:\n    break;\n  }    \n }\n\n\nconst Card = ({ id, cardTitle, description, priority, deadline, idColumn, taskOwner }) => {\n  const { user } = useAuth();\n  const { columns } = useBoards();\n  const { boardName } = useParams();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isOverflowVisible, setOverflowVisible] = useState(false); // управління станом відкриття тексту\n  const dispatch = useDispatch();\n  const deadlineIsToday = dayjs().format('DD/MM/YYYY') === deadline; // dayjs().format('DD/MM/YYYY') - сьогоднішня дата у визначеному форматі\n  const [isPopupVisible, setisPopupVisible] = useState(false);\n  \n// console.log('isPopupVisible :>> ', isPopupVisible);\n  const handleOpenModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleDescClick = () => {\n    setOverflowVisible(!isOverflowVisible);\n  };\n\n  const onOpenPopup = (e) => {\n    e.stopPropagation()\n    setisPopupVisible(true);\n  };\n\n  const onClosePopup = () => {\n    setisPopupVisible(false);\n  }; \n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        setisPopupVisible(false);\n     };\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    const handleClickOutside = (e) => {\n      const popupContainer = document.querySelector(`.${scss.OBCardPopupContainer}`);\n      if (popupContainer && !popupContainer?.contains(e.target)) {\n        setisPopupVisible(false);\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('click', handleClickOutside);\n  \n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('click', handleClickOutside);\n    };\n  }, [isPopupVisible]);\n\n  const onColumnChange = (_id, title, description, priority, deadline, id) => {\n    dispatch(updateTasks({taskOwner: _id, title, description, priority, deadLine: deadline, idTask: id, boardId: boardName}))\n    onClosePopup();\n\n  }; \n\n\n  return (\n    <div style={{ borderLeftColor: getBgColor(priority, user.theme === 'dark' ? 'rgba(255, 255, 255, 0.30)' : 'rgba(22, 22, 22, 0.30)') }} className={scss.OBCardContainer} data-theme={user.theme}>\n      <h4 className={scss.OBCardTitle}>{cardTitle}</h4>\n      <p className={`${scss.OBCardDescription}  ${isOverflowVisible ? scss.OBCardDescriptionFull : scss.OBCardDescriptionShort}`} onClick={handleDescClick}>{description}</p>\n\n      <hr className={scss.OBCardSeparator} />\n\n      <div className={scss.OBCardFooterContainer}>\n        <table className={scss.OBCardValuesContainer}>\n          <thead>\n            <tr>\n              <th className={scss.OBCardProreties}>Priority</th>\n              <th className={scss.OBCardProreties}>Deadline</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>\n                <div\n                  style={{ backgroundColor: getBgColor(priority, user.theme === 'dark' ? 'rgba(255, 255, 255, 0.30)' : 'rgba(22, 22, 22, 0.30)') }}\n                  className={scss.OBCardPriorityCircle}\n                ></div>\n              </td>\n              <td className={scss.OBCardDate}>{deadline}</td>\n            </tr>\n          </tbody>\n        </table>\n\n        {/* --------------------------- іконки --------------------------- */}\n\n        <div className={scss.OBCardIconsWrapper}>\n          {deadlineIsToday &&\n            (<svg className={scss.OBCardBellIcon} width=\"16\" height=\"16\" style={{ stroke: user.theme === 'violet' ? '#585bbe' : '#bedfad' }}>\n\n              <use href={SvgSprite + '#icon-bell'} />\n            </svg>\n          )}\n          <button\n            type=\"button\"\n            className={scss.OBCardBtnIcon}\n            aria-label=\"edit task\"\n            onClick={handleOpenModal}\n          >\n            <svg width=\"16\" height=\"16\">\n              <use href={SvgSprite + '#icon-pencil'} />\n            </svg>\n          </button>\n          {isModalOpen && (\n            <Modal isOpen={isModalOpen} onClose={handleCloseModal}>\n              <AddCard\n                idColumn={idColumn}\n                modalTitle={'Edit card'}\n                id={id}\n                cardTitle={cardTitle}\n                description={description}\n                priority={priority}\n                deadline={deadline}\n                modalBtnTitle={'Edit'}\n                operation={updateTasks}\n                onClose={handleCloseModal}\n              />\n            </Modal>\n          )}\n          <button type='button' className={scss.OBCardBtnIcon} onClick={onOpenPopup} aria-label='move task to another column'>\n            <svg width=\"16\" height=\"16\">\n              <use href={SvgSprite + '#icon-arrow'} />\n            </svg>\n          </button >\n          {isPopupVisible &&  (\n              <div className={scss.OBCardPopupContainer}>\n                  {columns.length<=1 ? <p>Add columns</p> : (<ul className={scss.OBCardPopupList}>\n                    {columns &&\n                        columns.map(({ _id, title }) => {\n                          return (\n                            <li key={_id} className={taskOwner===_id ? `${scss.OBCardPopupItem} ${scss.disabledTransfer}` : scss.OBCardPopupItem}>\n                             <p className={scss.OBCardPopupText}>{title}</p>\n                              <button\n                                  type=\"button\"\n                                  className={scss.OBCardBtnIcon}\n  \n                                  aria-label=\"change column\"\n                                  onClick={()=>onColumnChange(_id, title, description, priority, deadline, id)}\n                              >\n                                  <svg width=\"16\" height=\"16\">\n                                    <use href={SvgSprite + '#icon-arrow'} />\n  \n                                  </svg>\n                              </button>\n                            </li>\n                          )\n                        })\n                      }\n                  </ul>)}\n              </div>\n          )}\n          <button\n            type=\"button\"\n            className={scss.OBCardBtnIcon}\n            aria-label=\"delete task\"\n            onClick={() => dispatch(deleteTasks({ id, boardName }))}\n          >\n            <svg width=\"16\" height=\"16\">\n              <use href={SvgSprite + '#icon-trash'} />\n            </svg>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import { Card } from 'components/Card';\r\nimport styles from 'styles/index.module.scss';\r\nimport { useBoards } from 'hooks';\r\n\r\nexport const TasksList = ({allTasks: tasks, idColumn:_id}) => {\r\nconst {  filter: priority } = useBoards();\r\n\r\n  const filteredTasks =\r\n  priority === 'all'\r\n    ? tasks\r\n    : tasks.filter(task => {\r\n        return task?.priority === priority;\r\n      });\r\n    return (<ul className={styles.KkCards}>\r\n        {filteredTasks.map(\r\n          ({\r\n            title: titleCard,\r\n            description,\r\n            priority,\r\n            deadLine,\r\n            _id: idCard,\r\n            taskOwner\r\n          }) => {\r\n            \r\n            return (\r\n              <li key={idCard}>\r\n                <Card\r\n                  cardTitle={titleCard}\r\n                  id={idCard}\r\n                  description={description}\r\n                  priority={priority}\r\n                  deadline={deadLine}\r\n                  idColumn={_id}\r\n                  taskOwner={taskOwner}\r\n                />\r\n              </li>\r\n            );\r\n          }\r\n        )}\r\n      </ul>\r\n    )\r\n}","// 💙💛 Kostiantyn Koshyk\nimport { Filters } from './Filters';\nimport styles from 'styles/index.module.scss';\nimport { BtnAddColumn } from './BtnAddColumn';\nimport { Modal } from '../Modal/Modal';\nimport { useState } from 'react';\nimport { PopColumn } from '../PopColumn/PopColumn';\nimport {\n  addColumn,\n  addTasks,\n  deleteColumn,\n  editColumn,\n} from 'redux/board/boardOperations';\nimport { useDispatch } from 'react-redux';\nimport { useAuth, useBoards } from 'hooks';\nimport { BtnAddCard } from './BtnAddCard';\nimport { AddCard } from 'components/AddCard/AddCard';\n\nimport { TitleCards } from './TitleCards';\nimport { imagesBg } from 'images/image-url';\nimport { TasksList } from 'components/TasksList';\nimport Loader from 'components/Loader/Loader';\n\nexport const MainDashboard = () => {\n  const { columns, boardById, isLoading } = useBoards();\n  const { loading } = useAuth();\n  const dispatch = useDispatch();\n  const [isModalAddOpen, setIsModalAddOpen] = useState(false);\n  const [isModalEditOpen, setIsModalEditOpen] = useState(false);\n  const [isModalAddCardOpen, setIsModalAddCardOpen] = useState(false);\n  const [activeColumnId, setActiveColumnId] = useState('');\n  const [titleColumnId, setTitleColumnId] = useState('');\n\n  //!! Тут на всі відкриття і закриття модалок можна зробити switch\n  const handleOpenAddModal = () => {\n    setIsModalAddOpen(true);\n  };\n  const handleCloseAddModal = () => {\n    setIsModalAddOpen(false);\n  };\n\n  const handleOpenEditModal = () => {\n    setIsModalEditOpen(true);\n  };\n  const handleCloseEditModal = () => {\n    setIsModalEditOpen(false);\n  };\n\n  const handleOpenAddCardModal = () => {\n    setIsModalAddCardOpen(true);\n  };\n  const handleCloseAddCardModal = () => {\n    setIsModalAddCardOpen(false);\n  };\n\n  const clickOnColumnItemHandle = columnId => {\n    setActiveColumnId(columnId);\n  };\n\n  const clickOnColumnTitleHandle = title => {\n    setTitleColumnId(title);\n  };\n\n  const bg = imagesBg?.find(image => image.name === boardById.background);\n\n  const containerStyle = {\n    maxHeight: '100%',\n    backgroundImage: `url(${bg?.mobile})`,\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n  };\n\n  if (window.innerWidth >= 768) {\n    containerStyle.backgroundImage = `url(${bg?.tablet})`;\n  }\n\n  if (window.innerWidth >= 1440) {\n    containerStyle.backgroundImage = `url(${bg?.desktop})`;\n  }\n\n  return (\n    <div className={styles.KkSectionMainDashboard} style={containerStyle}>\n      {isLoading && loading && <Loader />}\n      <Filters className={styles.KkFilters} />\n\n      <ul className={styles.KkColums}>\n        {columns &&\n          columns.map(({ _id, title, tasks }) => (\n            <li key={_id}>\n              <TitleCards\n                className={styles.TitleCards}\n                title={title}\n                onEdit={() => {\n                  handleOpenEditModal();\n                  clickOnColumnItemHandle(_id);\n                  clickOnColumnTitleHandle(title);\n                }}\n                onTrash={() => dispatch(deleteColumn(_id))}\n              />\n              {tasks && <TasksList allTasks={tasks} idColumn={_id} />}\n              <BtnAddCard\n                className={styles.KkBtnAddCard}\n                title={'Add another card'}\n                theme={'light'}\n                onClick={() => {\n                  handleOpenAddCardModal();\n                  clickOnColumnItemHandle(_id);\n                }}\n              />\n            </li>\n          ))}\n        <BtnAddColumn\n          className={styles.KkBtnAddColumnMain}\n          title={'Add another column'}\n          theme={'light'}\n          onClick={handleOpenAddModal}\n        />\n      </ul>\n      {isModalAddOpen && (\n        <Modal isOpen={isModalAddOpen} onClose={handleCloseAddModal}>\n          <PopColumn\n            modalTitle={'Add column'}\n            modalBtnTitle={'Add'}\n            onClose={handleCloseAddModal}\n            operation={addColumn}\n          />\n        </Modal>\n      )}\n      {isModalEditOpen && (\n        <Modal isOpen={isModalEditOpen} onClose={handleCloseEditModal}>\n          <PopColumn\n            modalTitle={'Edit column'}\n            modalBtnTitle={'Add'}\n            onClose={handleCloseEditModal}\n            idColumn={activeColumnId}\n            infoData={{ title: titleColumnId }}\n            operation={editColumn}\n          />\n        </Modal>\n      )}\n      {isModalAddCardOpen && (\n        <Modal isOpen={isModalAddCardOpen} onClose={handleCloseAddCardModal}>\n          <AddCard\n            modalTitle={'Add card'}\n            modalBtnTitle={'Add'}\n            onClose={handleCloseAddCardModal}\n            idColumn={activeColumnId}\n            operation={addTasks}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getAllBoards, getBoardById } from 'redux/board/boardOperations';\nimport { MainDashboard } from 'components/MainDashboard/MainDashboard';\nimport { useParams } from 'react-router-dom';\n\nconst ScreensPage = () => {\n  const dispatch = useDispatch();\n  const { boardName } = useParams();\n\n  useEffect(() => {\n    dispatch(getAllBoards());\n    dispatch(getBoardById(boardName));\n  }, [boardName, dispatch]);\n\n  return (\n    <section>\n      <MainDashboard />\n    </section>\n  );\n};\nexport default ScreensPage;\n","import ScreensPage from 'components/ScreensPage/ScreensPage';\n\nconst HomePage = () => {\n  return (\n    <>\n      <ScreensPage />\n    </>\n  );\n};\nexport default HomePage;\n"],"names":["RadioBtns","_ref","parentComponent","priority","dispatch","useDispatch","filter","useBoards","user","useAuth","_useState","useState","_useState2","_slicedToArray","selectedPriorityFilter","setSelectedPriorityFilter","_useState3","_useState4","selectedPriority","setSelectedPriority","useEffect","setPriorityFilter","priorityStyles","without","grey","low","indigo","medium","pink","high","lightGreen","capitalizeFirstLetter","charAt","toUpperCase","slice","_jsxs","children","_jsx","className","scss","concat","Object","keys","map","FormControlLabel","label","Typography","style","fontSize","fontFamily","color","theme","sx","control","Radio","_objectSpread","item","value","onChange","e","target","checked","name","inputProps","backgroundColor","borderRadius","Filters","isFilterVisible","setIsFilterVisible","boardById","handleKeyDown","code","window","addEventListener","removeEventListener","styles","padding","background","title","type","onClick","width","height","href","SvgSprite","opacity","BtnAddColumn","clsx","PopColumn","modalTitle","modalBtnTitle","onClose","operation","idColumn","infoData","boardId","useParams","valueInput","setvalueInput","onSubmit","preventDefault","dataSubmit","board","boardName","autoComplete","placeholder","autoFocus","required","event","_event$target","prev","_defineProperty","BtnAddCard","Calendar","deadline","onFormatDeadline","inputWidth","setInputWidth","isCalendarOpen","setIsCalendarOpen","_useState5","dayjs","_useState6","selectedDate","setSelectedDate","dateFormat","format","contentWidth","length","formatedSelectedDate","createTheme","typography","join","components","MuiPaper","styleOverrides","root","position","border","borderColor","MuiPickersDay","fontweight","lineHeight","dayOutsideMonth","dayWithMargin","MuiPickersLayout","MuiDateCalendar","MuiPickersFadeTransitionGroup","fontWeight","letterSpacing","MuiDayCalendar","slideTransition","minHeight","header","marginTop","weekDayLabel","MuiPickersCalendarHeader","margin","borderBottom","borderBottomColor","paddingBottom","labelContainer","marginRight","marginLeft","MuiPickersArrowSwitcher","spacer","palette","primary","main","dark","LocalizationProvider","dateAdapter","AdapterDayjs","ThemeProvider","DatePicker","open","date","disablePast","dayOfWeekFormatter","day","showDaysOutsideCurrentMonth","slots","openPickerButton","slotProps","switchViewButton","display","previousIconButton","top","left","size","stroke","nextIconButton","right","textField","fullWidth","variant","minWidth","InputProps","disableUnderline","endAdornment","InputAdornment","cursor","edge","AddCard","id","cardTitle","description","titleValue","setTitleValue","descriptionValue","setDescriptionValue","inputDeadline","setInputDeadline","inputTitle","elements","trim","inputDescription","cardData","deadLine","taskOwner","idTask","reset","currentTarget","document","body","overflow","defaultValue","TitleCards","onEdit","onTrash","getBgColor","columns","isModalOpen","setIsModalOpen","isOverflowVisible","setOverflowVisible","deadlineIsToday","isPopupVisible","setisPopupVisible","handleCloseModal","handleClickOutside","popupContainer","querySelector","contains","onColumnChange","_id","updateTasks","borderLeftColor","Modal","isOpen","stopPropagation","_ref2","deleteTasks","TasksList","tasks","allTasks","filteredTasks","task","titleCard","idCard","Card","MainDashboard","_useBoards","isLoading","loading","isModalAddOpen","setIsModalAddOpen","isModalEditOpen","setIsModalEditOpen","isModalAddCardOpen","setIsModalAddCardOpen","_useState7","_useState8","activeColumnId","setActiveColumnId","_useState9","_useState10","titleColumnId","setTitleColumnId","handleCloseAddModal","handleCloseEditModal","handleCloseAddCardModal","clickOnColumnItemHandle","columnId","bg","imagesBg","image","containerStyle","maxHeight","backgroundImage","mobile","backgroundSize","backgroundRepeat","backgroundPosition","innerWidth","tablet","desktop","Loader","clickOnColumnTitleHandle","deleteColumn","addColumn","editColumn","addTasks","getAllBoards","getBoardById","_Fragment","ScreensPage"],"sourceRoot":""}