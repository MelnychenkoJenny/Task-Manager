{"version":3,"file":"static/js/12.b12014f9.chunk.js","mappings":"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","sources":["components/AddCard/RadioBtns.jsx","components/MainDashboard/Filters.jsx","components/MainDashboard/BtnAddColumn.jsx","components/PopColumn/PopColumn.jsx","components/MainDashboard/BtnAddCard.jsx","components/AddCard/Calendar.jsx","components/AddCard/AddCard.jsx","components/MainDashboard/TitleCards.jsx","components/Card/Card.jsx","components/TasksList/TasksList.jsx","components/MainDashboard/MainDashboard.jsx","components/ScreensPage/ScreensPage.jsx","pages/HomePage.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport scss from 'styles/index.module.scss';\nimport { indigo, pink, lightGreen, grey } from '@mui/material/colors';\nimport { FormControlLabel, Typography, Radio } from '@mui/material';\nimport { useAuth } from 'hooks';\nimport { useBoards } from 'hooks';\nimport { useDispatch } from 'react-redux';\nimport { setPriorityFilter } from 'redux/filter/filterSlice';\n\nexport const RadioBtns = ({ parentComponent, priority }) => {  // встановлена раніше та передана сюди пріоритетність для дефолтного стану (у подальшому підлягає редагуванню)\n   const dispatch = useDispatch();\n  const { filter } = useBoards();\n    const { user } = useAuth();\n    const [selectedPriorityFilter, setSelectedPriorityFilter] = useState(filter);\n  const [selectedPriority, setSelectedPriority] = useState(\n    parentComponent === 'FiltersModal'\n      ? 'none'\n      : priority\n      ? priority\n      : 'without'\n  );  \n  \nuseEffect(() => {\n    dispatch(setPriorityFilter(selectedPriorityFilter));\n  }, [dispatch, selectedPriorityFilter]);\n\n\n  const controlProps = item => ({\n    // low, medium, high, without\n    value: item,\n    onChange:\n      parentComponent === 'FiltersModal'\n        ? e => setSelectedPriorityFilter(e.target.value)\n        : e => setSelectedPriority(e.target.value),\n    checked:\n      parentComponent === 'FiltersModal'\n        ? selectedPriorityFilter === item\n        : selectedPriority === item,\n    name: 'priority',\n    inputProps: { 'aria-label': item },\n  });\n\n  const priorityStyles = \n    parentComponent === 'FiltersModal' \n    ? {\n        without: grey[400],  \n        low: indigo[200],\n        medium: pink[200],\n        high: lightGreen[200],    \n      }\n    :\n      {\n        low: indigo[200],\n        medium: pink[200],\n        high: lightGreen[200],\n        without: grey[400],      \n      }\n\n  function capitalizeFirstLetter(priority) {\n    return priority.charAt(0).toUpperCase() + priority.slice(1);\n  }\n\n  return (\n    <div>\n      <h3 className={scss.OBFiltersModalLabel}>Label color</h3>\n      <div className={ `${parentComponent === 'FiltersModal' ? scss.OBFiltersModalRadioGroupV : scss.OBFiltersModalRadioGroupH }`}>\n        {Object.keys(priorityStyles).map((priority) => (       //['low', 'medium', 'high', 'without'])\n          <FormControlLabel\n            key={priority}\n            label={ parentComponent === 'FiltersModal' \n              ? (\n                  <Typography \n                    style={{\n                      fontSize: '12px', \n                      fontFamily: 'Poppins, sans-serif', \n                      color: user.theme === 'dark' ? 'rgba(255, 255, 255, 0.50)' : 'rgba(22, 22, 22, 0.50)',\n                    }}\n                    sx={{\n                      '&.Mui-checked': {\n                        color: priorityStyles[priority], // Change label text color when checked\n                      },\n                    }}\n                  >\n                    {priority === 'without' ? 'Without priority' : capitalizeFirstLetter(priority)}\n                  </Typography>\n              ) \n              : null\n            }\n            // labelPlacement={ parentComponent === 'FiltersModal' ? \"end\" : null }\n            className={ parentComponent === 'FiltersModal' ? scss.OBFiltersModalRadioLabelV : scss.OBFiltersModalRadioLabelH}\n            control={\n              <Radio \n                className={scss.OBFiltersModalRadioBtn}\n                {...controlProps(priority)}\n                sx={{\n                  color: priorityStyles[priority],\n                  '&.Mui-checked': {\n                    color: priorityStyles[priority],\n                  },\n                  '&.Mui-checked .MuiSvgIcon-root': {\n                    fontSize: '17px',\n                  },\n                  '&:not(.Mui-checked) .MuiSvgIcon-root': {\n                    fontSize: '14px',\n                    backgroundColor: priorityStyles[priority],\n                    borderRadius: '50%',\n                  },\n                }}\n              />\n            }\n          />\n        ))}\n      </div>\n  </div>\n  );\n};\n","// 💙💛 Kostiantyn Koshyk\nimport { useState, useEffect } from 'react';\nimport styles from 'styles/index.module.scss';\nimport SvgSprite from 'images/sprite.svg';\nimport { useBoards } from 'hooks';\nimport { RadioBtns } from '../AddCard/RadioBtns';\nimport { useAuth } from 'hooks';\n\nimport { useDispatch } from 'react-redux';\nimport { setPriorityFilter } from 'redux/filter/filterSlice';\n\nexport const Filters = ({ className }) => {\n  const dispatch = useDispatch();\n  const [isFilterVisible, setIsFilterVisible] = useState(false);\n  const { boardById } = useBoards();\n  const { user } = useAuth();\n\n  const handleShowAll = () => {\n    dispatch(setPriorityFilter('all'));\n  };\n\n  const onOpenFilter = () => {\n    setIsFilterVisible(true);\n  };\n  const onCloseFilter = () => {\n    setIsFilterVisible(false);\n  };\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        setIsFilterVisible(false);\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [isFilterVisible]);\n\n  return (\n    <div\n      className={`${className} ${styles.OBFilterModalContainer}`}\n      data-theme={user.theme}\n      style={{ display: 'flex', justifyContent: 'space-between', position: 'relative'}}\n    >\n      {/* <div className={styles.KkWrapFilters}> */}\n      <h2\n        className={styles.KkTitle}\n        style={{ padding: !boardById.background && '4px' }}\n      >\n        {boardById.title}\n      </h2>\n      {/* <h2 className={styles.KkTitle}>{boardById.title}</h2> */}\n\n      <button\n        type=\"button\"\n        className={styles.KkBtnFilters}\n        onClick={onOpenFilter}\n      >\n        <svg width=\"16px\" height=\"16px\">\n          <use href={`${SvgSprite}#icon-filter`}></use>\n        </svg>\n        <p>Filters</p>\n      </button>\n\n      {isFilterVisible && (\n        <div\n          className={styles.OBFiltersModalContainer}\n          style={{ opacity: isFilterVisible ? 1 : 0 }}\n          data-theme={user.theme}\n        >\n          <button\n            type=\"button\"\n            className={styles.OBFilterBtnIcon}\n            aria-label=\"close\"\n            onClick={onCloseFilter}\n          >\n            <svg width=\"18\" height=\"18\">\n              <use className=\"icon\" href={SvgSprite + '#icon-close'} />\n            </svg>\n          </button>\n          <h4 className={styles.OBFiltersModalTitle}>Filters</h4>\n          <hr className={styles.OBFiltersModalSeparator} />\n          <div className={styles.OBFiltersModalContent}>\n            <RadioBtns parentComponent={'FiltersModal'} />\n            <p className={styles.OBFiltersModalShow} onClick={handleShowAll}>\n              Show all\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n    // </div>\n  );\n};\n","// 💙💛 Kostiantyn Koshyk\r\nimport styles from 'styles/index.module.scss';\r\nimport SvgSprite from 'images/sprite.svg';\r\nimport clsx from 'clsx';\r\n\r\nexport const BtnAddColumn = ({ className, title, theme, onClick }) => {\r\n  return (\r\n    <li className={className}>\r\n      <button\r\n        className={clsx(styles.KkBtnColumn, styles[theme])}\r\n        onClick={onClick}\r\n      >\r\n        <div className={clsx(styles.KkIconPlusColumn, styles[theme])}>\r\n          <svg className={clsx(styles[theme])} width=\"14px\" height=\"14px\">\r\n            <use href={`${SvgSprite}#icon-plus`}></use>\r\n          </svg>\r\n        </div>\r\n        <p className={clsx(styles[theme])}>{title}</p>\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n","import { useDispatch } from 'react-redux';\r\nimport scss from 'styles/index.module.scss';\r\nimport SvgSprite from 'images/sprite.svg';\r\nimport { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useAuth } from 'hooks';\r\n\r\nexport const PopColumn = ({\r\n  modalTitle,\r\n  modalBtnTitle,\r\n  onClose,\r\n  operation,\r\n  idColumn,\r\n  infoData,\r\n}) => {\r\n  const { user } = useAuth();\r\n  const boardId = useParams();\r\n  const dispatch = useDispatch();\r\n  const [valueInput, setvalueInput] = useState(\r\n    infoData ? { title: infoData.title } : { title: '' }\r\n  );\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n    setvalueInput(prev => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n  console.log('columns :>> ', infoData);\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const dataSubmit = idColumn\r\n      ? {\r\n          title: valueInput.title,\r\n          idColumn: idColumn,\r\n        }\r\n      : {\r\n          title: valueInput.title,\r\n          board: boardId.boardName,\r\n        };\r\n\r\n    if (infoData?.title === valueInput.title) {\r\n      onClose();\r\n      return;\r\n    }\r\n\r\n    dispatch(operation(dataSubmit));\r\n\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <div className={scss.AAColumnContainer} data-theme={user.theme}>\r\n      <h4 className={scss.AAColumnTitle}>{modalTitle}</h4>\r\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n        <label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            placeholder=\"Title\"\r\n            autoFocus\r\n            required\r\n            className={scss.AAColumnInput}\r\n            value={valueInput.title || ''}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={scss.AAColumnBtn}>\r\n          <div className={scss.AAColumnSvgContainer}>\r\n            <svg className={scss.AAColumnSvg}>\r\n              <use href={SvgSprite + '#icon-plus'} />\r\n            </svg>\r\n          </div>\r\n          {modalBtnTitle}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\n// export default PopColumn;\r\n","// 💙💛 Kostiantyn Koshyk\nimport styles from 'styles/index.module.scss';\nimport SvgSprite from 'images/sprite.svg';\nimport clsx from 'clsx';\n\nexport const BtnAddCard = ({ title, className, theme, onClick }) => {\n  return (\n    <div className={className}>\n      <button\n        className={clsx(styles.KkBtnCard, styles[theme])}\n        onClick={onClick}\n      >\n        <div className={clsx(styles.KkIconPlusCard, styles[theme])}>\n          <svg className={clsx(styles[theme])} width=\"14px\" height=\"14px\">\n            <use href={`${SvgSprite}#icon-plus`}></use>\n          </svg>\n        </div>\n        <p className={clsx(styles[theme])}>{title}</p>\n      </button>\n    </div>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport scss from '../../styles/index.module.scss';\nimport SvgSprite from '../../images/sprite.svg';\nimport dayjs from 'dayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { DatePicker } from '@mui/x-date-pickers';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { InputAdornment } from '@mui/material';\nimport { useAuth } from 'hooks';\n\n\n\n\nexport const Calendar = ({ deadline, onFormatDeadline }) => { // deadline з AddCard\n  const { user } = useAuth();\n  const [inputWidth, setInputWidth] = useState('auto');\n  const [isCalendarOpen, setIsCalendarOpen] = useState(false);\n  const [selectedDate, setSelectedDate] = useState(\n  deadline ? dayjs(deadline, 'DD/MM/YYYY') : dayjs()\n  ); // dayjs() - currentDate\n\n    //selectedDate = M {$L: 'en', $u: undefined, $d: Tue Aug 29 2023 08:05:53 GMT+0300 (за східноєвропейським літнім часом), $x: {…}, $y: 2023, …}\n  // deadline ? dayjs(deadline, 'DD/MM/YYYY').format(\"dddd, MMMM D\") : dayjs()\n\n  // console.log(deadline) //01/09/2023\n  // console.log(dayjs(deadline)) // M {... Mon Jan 09 2023 00:00:00 ...} - міняє день і місяць місцями\n  // console.log(dayjs(deadline, 'DD/MM/YYYY')); // M {... Fri Sep 01 2023 00:00:00 ...} - тепер все Ок\n  // Тепер бібліотека Material UA застосує формат \"dddd, MMMM D\" і отримаємо те, що треба:\n  // console.log(dayjs(deadline, 'DD/MM/YYYY').format(\"dddd, MMMM D\")); // Thursday, August 31\n\n  // \"Today, September 01\" або \"Saturday, September 02\"\n  const dateFormat =\n    dayjs(selectedDate).format('dddd, MMMM D') ===\n    dayjs().format('dddd, MMMM D')\n      ? '[Today,] MMMM D'\n      : 'dddd, MMMM D';\n\n  //------------------ Ширина інпута DatePicker---------------------\n  useEffect(() => {\n    const contentWidth = selectedDate.format(dateFormat).length * 9;\n    setInputWidth(`${contentWidth}px`);\n  }, [selectedDate, dateFormat]);\n\n  //-----------------Передача даних в AddCard-----------------------\n  useEffect(() => {\n    const formatedSelectedDate = dayjs(selectedDate).format('DD/MM/YYYY'); // 29/11/2023\n    onFormatDeadline && onFormatDeadline(formatedSelectedDate);\n  }, [selectedDate, onFormatDeadline]);\n\n//--------------------Створення теми--------------------------------\n\n  const theme = createTheme({\n    typography: {\n      fontFamily: ['Poppins', 'sans-serif'].join(','), // інпут\n    },\n    components: {\n      MuiPaper: { // полотно календаря\n        styleOverrides: {\n          root: {\n            position: 'relative',\n            width: '233px',\n            height: '254px',\n            padding: '18px',\n            background: user.theme === 'dark' ? '#1F1F1F' : '#FFF',\n            border: '1px solid',\n            borderRadius: '8px',\n            borderColor: user.theme === 'violet' ? '#585bbe' : '#bedfad',\n          },\n        },\n      },\n      MuiPickersDay: { // усі дні\n        styleOverrides: {\n            root: {\n                width: '23px',\n                height: '23px',\n                fontSize: '14px',\n                fontweight: '400',\n                lineHeight: '18px',\n                '&:hover': {\n                    backgroundColor: user.theme === 'violet' ? '#8d8fc9' : '#9fd186',\n                },\n            },\n            dayOutsideMonth: { // місяць\n              color: user.theme === 'dark' ? '#FFF' : '#161616',  \n            },\n            dayWithMargin: {// видимі дати за межами місяця\n              color: user.theme === 'dark' ? 'rgba(255, 255, 255, 0.20)' : 'rgba(22, 22, 22, 0.20)',   \n              '&.Mui-disabled:not(.Mui-selected)': { // минулі дати, які не можна обрати\n                color: user.theme === 'dark' ? 'rgba(255, 255, 255, 0.20)' : 'rgba(22, 22, 22, 0.20)',\n              }, \n            },  \n        },\n      },\n      MuiPickersLayout: { // полотно календаря без падінгів\n        styleOverrides: {\n            root: {\n                width: '197px',\n            },\n        },\n      },\n      MuiDateCalendar: {   // полотно календаря без падінгів\n        styleOverrides: {\n            root: {\n                width: '197px',\n            },\n        },\n     },\n     MuiPickersFadeTransitionGroup: {\n        styleOverrides: {\n            root: {\n                color: '#161616',\n                fontFamily: 'Poppins, sans-serif',\n                fontSize: '16px',\n                fontWeight: 500,\n                letterSpacing: '-0.32px',\n            },\n        },\n     },\n     MuiDayCalendar: {\n      styleOverrides: {\n        slideTransition: {\n          minHeight: '155px', // обмежуємо висоту полотна календаря\n        },\n        header: { \n          marginTop: '14px',  // висота лінійки з днями тижня\n        },\n        weekDayLabel: {\n          height: '23px',  // висота кожного дня тижня\n          width: '23px',\n          color: user.theme === 'dark' ? 'rgba(255, 255, 255, 0.50)' : 'rgba(22, 22, 22, 0.50)',    // rgba(255, 255, 255, 0.50);\n          fontFamily: 'Poppins, sans-serif',\n          fontSize: '14px',\n          fontWeight: 500,\n          lineHeight: 'normal',\n          letterSpacing: '-0.28px',\n        },\n      },\n     },   \n     MuiPickersCalendarHeader: {   \n        styleOverrides: {\n            root: {\n                padding: 0,\n                margin: 0,\n                borderBottom: '1px solid',\n                borderBottomColor: user.theme === 'dark' ? 'rgba(255, 255, 255, 0.20)' : 'rgba(22, 22, 22, 0.20)',\n            },\n            label: {\n                margin: 0,\n                paddingBottom: '14px',\n                color: user.theme === 'dark' ? '#FFF' : '#161616',\n            },\n            labelContainer: {\n                marginRight: 'auto',\n                marginLeft: 'auto',\n            },\n        },\n     },\n     MuiPickersArrowSwitcher: {\n        styleOverrides: {\n          spacer: {\n            width: 0,\n          },\n        },\n     },\n    },\n    palette: {\n      primary: {\n        main: '#BEDBB0', // без цього не працює\n        dark: user.theme === 'violet' ? '#8d8fc9' : '#9fd186', // обраний колір дня\n      },\n    },\n  });\n\n\n  return (\n    <div>\n    <LocalizationProvider dateAdapter={AdapterDayjs}> {/* dateAdapter={AdapterDayjs} - вказуємо, що під капотом використовуємо бібліотеку Day.js (її методи) */}\n      <ThemeProvider theme={theme}>\n        <DatePicker\n          open={isCalendarOpen}\n          onClose={() => setIsCalendarOpen(false)} // закриття календаря\n          onChange={date => setSelectedDate(date)} //Material UA в date записує обрану з календаря дату\n          // M {$L: 'en', $u: undefined, $d: Fri Sep 01 2023 09:13:29 GMT+0300 (за східноєвропейським літнім часом), $x: {…}, $y: 2023, …}\n          value={selectedDate}\n          format={dateFormat} // приймає рядок\n          disablePast={true} // минулі дати не обируться\n          dayOfWeekFormatter={day => day.slice(0, 2)}// видимі перші 2 літери назви дня тижня          \n          showDaysOutsideCurrentMonth\n          slots={{\n            openPickerButton: () => null, \n          }}\n          slotProps={{\n            switchViewButton: { sx: { display: 'none' } }, // стрілка вниз поряд з місяцем і роком\n            previousIconButton: {   // кнопка <\n                sx: {\n                  position: 'absolute',\n                  top: '5px',\n                  left: '5px',\n                  size: 'small',\n                  color: user.theme === 'violet' ? '#5255BC' : '#BEDBB0',  // серединка\n                  stroke: 'none', // обводка\n                },\n            },\n            nextIconButton: {  // кнопка >\n                sx: {\n                  position: 'absolute',\n                  top: '5px',\n                  right: '5px',\n                  color: user.theme === 'violet' ? '#5255BC' : '#BEDBB0',  // серединка\n                  stroke: 'none', // обводка\n                },\n            },\n            textField: {\n              fullWidth: false,\n              onClick: () => setIsCalendarOpen(true), // інпут стає клікабельним; по кліку відкривається календар (picker)\n              variant: 'standard',\n              size: 'small',\n              sx: {\n                width: inputWidth,\n                minWidth: '130px',\n              },\n              InputProps: {\n                disableUnderline: true, // прибирає дефолтний нижній бордер\n                'aria-label': 'deadline',\n                style: {\n                  fontSize: '14px',\n                  fontFamily: 'Poppins, sans-serif',\n                  color: user.theme === 'violet' ? '#5255BC' : '#BEDBB0', // колір тексту\n                  fontWeight: 500,\n                },\n                endAdornment: (  // розташування іконки - в кінці інпуту (є і startAdornment)\n                  <InputAdornment\n                    position=\"start\"\n                    sx={{ cursor: 'pointer' }}\n                  >\n                    <svg className={scss.OBAddDateIcon} width=\"18px\">\n                      <use\n                        href={SvgSprite + '#icon-chevron-down'} // стрілка вниз в календарі\n                        aria-label=\"open calendar\"\n                        edge=\"start\"\n                      />\n                    </svg>\n                  </InputAdornment>\n                ),\n              },\n            },\n          }}\n        />\n      </ThemeProvider>\n      </LocalizationProvider>\n    </div>\n  );\n};\n\n\n\n\n\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport scss from 'styles/index.module.scss';\nimport SvgSprite from 'images/sprite.svg';\nimport { useAuth } from 'hooks';\nimport { useParams } from 'react-router-dom';\nimport { RadioBtns } from './RadioBtns';\nimport { Calendar } from './Calendar';\n\nexport const AddCard = ({\n  modalTitle,\n  modalBtnTitle,\n  idColumn, // тут і нижче для редагування\n  id,\n  cardTitle,\n  description,\n  priority,\n  deadline,\n  onClose,\n  operation,\n}) => {\n  const { user } = useAuth();\n  const dispatch = useDispatch();\n  const { boardName } = useParams();\n\n  const [titleValue, setTitleValue] = useState(cardTitle); // для редагування\n  const [descriptionValue, setDescriptionValue] = useState(description); // для редагування\n  const [inputDeadline, setInputDeadline] = useState(null);\n\n  const onHandleFormatDeadline = formatedSelectedDate => {\n    setInputDeadline(formatedSelectedDate);\n  };\n\n  //------------------------------------- Submit -------------------------------------------\n\n  const handleFormSubmit = event => {\n    // відправка даних\n    event.preventDefault();\n\n    const inputTitle = event.target.elements.title.value.trim();\n    let inputDescription = event.target.elements.description.value.trim();\n    const inputPriority = event.target.elements.priority.value;\n\n    if (inputDescription === '') {\n      inputDescription = ' ';\n    }\n\n    if (\n      inputTitle === cardTitle &&\n      inputDescription === description &&\n      inputPriority === priority &&\n      inputDeadline === deadline\n    ) {\n      onClose();\n      return;\n    }\n\n    const cardData = {\n      title: inputTitle,\n      description: inputDescription,\n      priority: inputPriority,\n      deadLine: inputDeadline,\n    };\n\n    if (id) {\n      dispatch(\n        operation({\n          ...cardData,\n          taskOwner: idColumn,\n          idTask: id,\n          boardId: boardName,\n        })\n      );\n    } else {\n      dispatch(\n        operation({ ...cardData, taskOwner: idColumn, boardId: boardName })\n      );\n    }\n\n    event.target.reset();\n\n    if (event.currentTarget === event.target) {\n      onClose();\n      document.body.style.overflow = 'visible'; //body почне скролитися після закриття модалки\n    }\n  };\n\n  return (\n    <div className={scss.OBAddContainer} data-theme={user.theme}>\n      <h4 className={scss.OBAddTitle}>{modalTitle}</h4>\n      <form onSubmit={handleFormSubmit} autoComplete=\"off\">\n        <label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Title\"\n            autoFocus\n            required\n            className={scss.OBAddInput}\n            defaultValue={titleValue} // для редагування\n            onChange={e => setTitleValue(e.target.value)} // для редагування\n          />\n        </label>\n        <label>\n          <textarea\n            type=\"text\"\n            name=\"description\"\n            placeholder=\"Description\"\n            className={`${scss.OBAddInput} ${scss.OBAddDescription}`}\n            defaultValue={descriptionValue} // для редагування\n            onChange={e => setDescriptionValue(e.target.value)} // для редагування\n          />\n        </label>\n\n        <RadioBtns parentComponent={'AddCard'} priority={priority} />\n\n        <div>\n          <p className={scss.OBAddlabel}>Deadline</p>\n          <Calendar\n            deadline={deadline}\n            onFormatDeadline={onHandleFormatDeadline}\n          />\n        </div>\n\n        <button type=\"submit\" className={scss.OBAddSubmitBtn}>\n          <div className={scss.OBAddIconWrapper}>\n            <svg className={scss.OBAddSubmitIcon}>\n              <use href={SvgSprite + '#icon-plus'} />\n            </svg>\n          </div>\n          {modalBtnTitle}\n        </button>\n      </form>\n    </div>\n  );\n};\n","// 💙💛 Kostiantyn Koshyk\nimport styles from 'styles/index.module.scss';\nimport SvgSprite from 'images/sprite.svg';\nimport clsx from 'clsx';\n// import { cleanDigitSectionValue } from '@mui/x-date-pickers/internals/hooks/useField/useField.utils';\n\nexport const TitleCards = ({ className, title, theme, onEdit, onTrash }) => {\n  // const onIconPensil = () => {\n  //   console.log('icon pensil click');\n  // };\n\n  // const onIconTrash = () => {\n  //   console.log('icon trash click');\n  // };\n\n  return (\n    <div className={className}>\n      <div className={clsx(styles.KkWrapTitleCards, styles[theme])}>\n        <p className={clsx(styles[theme])}> {title}</p>\n        <div className={styles.KkSvgTitleCards}>\n          <button className={styles.KkBtnIcons} onClick={onEdit}>\n            <svg className={clsx(styles[theme])} width=\"16px\" height=\"16px\">\n              <use href={`${SvgSprite}#icon-pencil`}></use>\n            </svg>\n          </button>\n\n          <button className={styles.KkBtnIcons} onClick={onTrash}>\n            <svg className={clsx(styles[theme])} width=\"16px\" height=\"16px\">\n              <use href={`${SvgSprite}#icon-trash`}></use>\n            </svg>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport dayjs from 'dayjs';\nimport { Modal } from '../Modal/Modal';\nimport { AddCard } from '../AddCard/AddCard';\nimport scss from 'styles/index.module.scss';\nimport SvgSprite from 'images/sprite.svg';\nimport { deleteTasks, updateTasks } from 'redux/board/boardOperations';\nimport { useParams } from 'react-router-dom';\nimport { useAuth, useBoards } from 'hooks';\n\nconst getBgColor = (priority, color) => {\n  switch (priority) {\n   case 'low':\n     return '#8FA1D0';\n   case 'medium':\n     return 'rgba(224, 156, 181, 1)';\n   case 'high':\n     return '#BEDBB0';\n   case 'without':\n     return color; //'rgba(22, 22, 22, 0.30)'; //rgba(255, 255, 255, 0.30)\n   default:\n    break;\n  }    \n }\n\n\nconst Card = ({ id, cardTitle, description, priority, deadline, idColumn, taskOwner }) => {\n  const { user } = useAuth();\n  const { columns } = useBoards();\n  const { boardName } = useParams();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isOverflowVisible, setOverflowVisible] = useState(false); // управління станом відкриття тексту\n  const dispatch = useDispatch();\n  const deadlineIsToday = dayjs().format('DD/MM/YYYY') === deadline; // dayjs().format('DD/MM/YYYY') - сьогоднішня дата у визначеному форматі\n  const [isPopupVisible, setisPopupVisible] = useState(false);\n  \n  const handleOpenModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleDescClick = () => {\n    setOverflowVisible(!isOverflowVisible);\n  };\n\n  const onOpenPopup = (e) => {\n    e.stopPropagation()\n    setisPopupVisible(true);\n  };\n\n  const onClosePopup = () => {\n    setisPopupVisible(false);\n  }; \n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        setisPopupVisible(false);\n     };\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    const handleClickOutside = (e) => {\n      const popupContainer = document.querySelector(`.${scss.OBCardPopupContainer}`);\n      if (popupContainer && !popupContainer?.contains(e.target)) {\n        setisPopupVisible(false);\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('click', handleClickOutside);\n  \n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('click', handleClickOutside);\n    };\n  }, [isPopupVisible]);\n\n  const onColumnChange = (_id, title, description, priority, deadline, id) => {\n    dispatch(updateTasks({taskOwner: _id, title, description, priority, deadLine: deadline, idTask: id, boardId: boardName}))\n    onClosePopup();\n\n  }; \n\n\n  return (\n    <div style={{ borderLeftColor: getBgColor(priority, user.theme === 'dark' ? 'rgba(255, 255, 255, 0.30)' : 'rgba(22, 22, 22, 0.30)') }} className={scss.OBCardContainer} data-theme={user.theme}>\n      <h4 className={scss.OBCardTitle}>{cardTitle}</h4>\n      <p className={`${scss.OBCardDescription}  ${isOverflowVisible ? scss.OBCardDescriptionFull : scss.OBCardDescriptionShort}`} onClick={handleDescClick}>{description}</p>\n\n      <hr className={scss.OBCardSeparator} />\n\n      <div className={scss.OBCardFooterContainer}>\n        <table className={scss.OBCardValuesContainer}>\n          <thead>\n            <tr>\n              <th className={scss.OBCardProreties}>Priority</th>\n              <th className={scss.OBCardProreties}>Deadline</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>\n                <div\n                  style={{ backgroundColor: getBgColor(priority, user.theme === 'dark' ? 'rgba(255, 255, 255, 0.30)' : 'rgba(22, 22, 22, 0.30)') }}\n                  className={scss.OBCardPriorityCircle}\n                ></div>\n              </td>\n              <td className={scss.OBCardDate}>{deadline}</td>\n            </tr>\n          </tbody>\n        </table>\n\n        {/* --------------------------- іконки --------------------------- */}\n\n        <div className={scss.OBCardIconsWrapper}>\n          {deadlineIsToday &&\n            (<svg className={scss.OBCardBellIcon} width=\"16\" height=\"16\" style={{ stroke: user.theme === 'violet' ? '#585bbe' : '#bedfad' }}>\n\n              <use href={SvgSprite + '#icon-bell'} />\n            </svg>\n          )}\n          <button\n            type=\"button\"\n            className={scss.OBCardBtnIcon}\n            aria-label=\"edit task\"\n            onClick={handleOpenModal}\n          >\n            <svg width=\"16\" height=\"16\">\n              <use href={SvgSprite + '#icon-pencil'} />\n            </svg>\n          </button>\n          {isModalOpen && (\n            <Modal isOpen={isModalOpen} onClose={handleCloseModal}>\n              <AddCard\n                idColumn={idColumn}\n                modalTitle={'Edit card'}\n                id={id}\n                cardTitle={cardTitle}\n                description={description}\n                priority={priority}\n                deadline={deadline}\n                modalBtnTitle={'Edit'}\n                operation={updateTasks}\n                onClose={handleCloseModal}\n              />\n            </Modal>\n          )}\n          <button type='button' className={scss.OBCardBtnIcon} onClick={onOpenPopup} aria-label='move task to another column'>\n            <svg width=\"16\" height=\"16\">\n              <use href={SvgSprite + '#icon-arrow'} />\n            </svg>\n          </button >\n          {isPopupVisible &&  (\n              <div className={scss.OBCardPopupContainer}>\n                  {columns.length<=1 ? <p>Add columns</p> : (<ul className={scss.OBCardPopupList}>\n                    {columns &&\n                        columns.map(({ _id, title }) => {\n                          return (\n                            <li key={_id} className={taskOwner===_id ? `${scss.OBCardPopupItem} ${scss.disabledTransfer}` : scss.OBCardPopupItem}>\n                             <p className={scss.OBCardPopupText}>{title}</p>\n                              <button\n                                  type=\"button\"\n                                  className={scss.OBCardBtnIcon}\n  \n                                  aria-label=\"change column\"\n                                  onClick={()=>onColumnChange(_id, title, description, priority, deadline, id)}\n                              >\n                                  <svg width=\"16\" height=\"16\">\n                                    <use href={SvgSprite + '#icon-arrow'} />\n  \n                                  </svg>\n                              </button>\n                            </li>\n                          )\n                        })\n                      }\n                  </ul>)}\n              </div>\n          )}\n          <button\n            type=\"button\"\n            className={scss.OBCardBtnIcon}\n            aria-label=\"delete task\"\n            onClick={() => dispatch(deleteTasks({ id, boardName }))}\n          >\n            <svg width=\"16\" height=\"16\">\n              <use href={SvgSprite + '#icon-trash'} />\n            </svg>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import { Card } from 'components/Card';\r\nimport styles from 'styles/index.module.scss';\r\nimport { useBoards } from 'hooks';\r\n\r\nexport const TasksList = ({allTasks: tasks, idColumn:_id}) => {\r\nconst {  filter: priority } = useBoards();\r\n\r\n  const filteredTasks =\r\n  priority === 'all'\r\n    ? tasks\r\n    : tasks.filter(task => {\r\n        return task?.priority === priority;\r\n      });\r\n    return (<ul className={styles.KkCards}>\r\n        {filteredTasks.map(\r\n          ({\r\n            title: titleCard,\r\n            description,\r\n            priority,\r\n            deadLine,\r\n            _id: idCard,\r\n            taskOwner\r\n          }) => {\r\n            \r\n            return (\r\n              <li key={idCard}>\r\n                <Card\r\n                  cardTitle={titleCard}\r\n                  id={idCard}\r\n                  description={description}\r\n                  priority={priority}\r\n                  deadline={deadLine}\r\n                  idColumn={_id}\r\n                  taskOwner={taskOwner}\r\n                />\r\n              </li>\r\n            );\r\n          }\r\n        )}\r\n      </ul>\r\n    )\r\n}","// 💙💛 Kostiantyn Koshyk\nimport { Filters } from './Filters';\nimport styles from 'styles/index.module.scss';\nimport { BtnAddColumn } from './BtnAddColumn';\nimport { Modal } from '../Modal/Modal';\nimport { useState } from 'react';\nimport { PopColumn } from '../PopColumn/PopColumn';\nimport {\n  addColumn,\n  addTasks,\n  deleteColumn,\n  editColumn,\n} from 'redux/board/boardOperations';\nimport { useDispatch } from 'react-redux';\nimport { useAuth, useBoards } from 'hooks';\nimport { BtnAddCard } from './BtnAddCard';\nimport { AddCard } from 'components/AddCard/AddCard';\n\nimport { TitleCards } from './TitleCards';\nimport { imagesBg } from 'images/image-url';\nimport { TasksList } from 'components/TasksList';\nimport Loader from 'components/Loader/Loader';\n\nexport const MainDashboard = () => {\n  const { columns, boardById, isLoading } = useBoards();\n  const { loading } = useAuth();\n  const dispatch = useDispatch();\n  const [isModalAddOpen, setIsModalAddOpen] = useState(false);\n  const [isModalEditOpen, setIsModalEditOpen] = useState(false);\n  const [isModalAddCardOpen, setIsModalAddCardOpen] = useState(false);\n  const [activeColumnId, setActiveColumnId] = useState('');\n  const [titleColumnId, setTitleColumnId] = useState('');\n\n  //!! Тут на всі відкриття і закриття модалок можна зробити switch\n  const handleOpenAddModal = () => {\n    setIsModalAddOpen(true);\n  };\n  const handleCloseAddModal = () => {\n    setIsModalAddOpen(false);\n  };\n\n  const handleOpenEditModal = () => {\n    setIsModalEditOpen(true);\n  };\n  const handleCloseEditModal = () => {\n    setIsModalEditOpen(false);\n  };\n\n  const handleOpenAddCardModal = () => {\n    setIsModalAddCardOpen(true);\n  };\n  const handleCloseAddCardModal = () => {\n    setIsModalAddCardOpen(false);\n  };\n\n  const clickOnColumnItemHandle = columnId => {\n    setActiveColumnId(columnId);\n  };\n\n  const clickOnColumnTitleHandle = title => {\n    setTitleColumnId(title);\n  };\n\n  const bg = imagesBg?.find(image => image.name === boardById.background);\n\n  const containerStyle = {\n    backgroundImage: `url(${bg?.mobile})`,\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n  };\n\n  if (window.innerWidth >= 768) {\n    containerStyle.backgroundImage = `url(${bg?.tablet})`;\n  }\n\n  if (window.innerWidth >= 1440) {\n    containerStyle.backgroundImage = `url(${bg?.desktop})`;\n  }\n\n  return (\n    <div className={styles.KkSectionMainDashboard} style={containerStyle}>\n      {isLoading && loading && <Loader />}\n      <Filters className={styles.KkFilters} />\n        <ul className={styles.KkColums}>\n          {columns &&\n            columns.map(({ _id, title, tasks }) => (\n              <li key={_id}>\n                <TitleCards\n                  className={styles.TitleCards}\n                  title={title}\n                  onEdit={() => {\n                    handleOpenEditModal();\n                    clickOnColumnItemHandle(_id);\n                    clickOnColumnTitleHandle(title);\n                  }}\n                  onTrash={() => dispatch(deleteColumn(_id))}\n                />\n                {tasks && <TasksList allTasks={tasks} idColumn={_id} />}\n                <BtnAddCard\n                  className={styles.KkBtnAddCard}\n                  title={'Add another card'}\n                  theme={'light'}\n                  onClick={() => {\n                    handleOpenAddCardModal();\n                    clickOnColumnItemHandle(_id);\n                  }}\n                />\n              </li>\n            ))}\n             <BtnAddColumn\n          className={styles.KkBtnAddColumnMain}\n          title={'Add another column'}\n          theme={'light'}\n          onClick={handleOpenAddModal}\n        />\n        </ul>       \n      {isModalAddOpen && (\n        <Modal isOpen={isModalAddOpen} onClose={handleCloseAddModal}>\n          <PopColumn\n            modalTitle={'Add column'}\n            modalBtnTitle={'Add'}\n            onClose={handleCloseAddModal}\n            operation={addColumn}\n          />\n        </Modal>\n      )}\n      {isModalEditOpen && (\n        <Modal isOpen={isModalEditOpen} onClose={handleCloseEditModal}>\n          <PopColumn\n            modalTitle={'Edit column'}\n            modalBtnTitle={'Add'}\n            onClose={handleCloseEditModal}\n            idColumn={activeColumnId}\n            infoData={{ title: titleColumnId }}\n            operation={editColumn}\n          />\n        </Modal>\n      )}\n      {isModalAddCardOpen && (\n        <Modal isOpen={isModalAddCardOpen} onClose={handleCloseAddCardModal}>\n          <AddCard\n            modalTitle={'Add card'}\n            modalBtnTitle={'Add'}\n            onClose={handleCloseAddCardModal}\n            idColumn={activeColumnId}\n            operation={addTasks}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n};\n","// import { useEffect } from 'react';\n// import { useDispatch } from 'react-redux';\n// import { getAllBoards, getBoardById } from 'redux/board/boardOperations';\nimport { MainDashboard } from 'components/MainDashboard/MainDashboard';\n// import { useParams } from 'react-router-dom';\n// import { useAuth, useBoards } from 'hooks';\n// import Loader from 'components/Loader/Loader';\n\nconst ScreensPage = () => {\n  // const dispatch = useDispatch();\n  // const { boardName } = useParams();\n  // const { isLoading } = useBoards();\n  // const { loading } = useAuth();\n\n  // useEffect(() => {\n  //   dispatch(getAllBoards());\n  //   dispatch(getBoardById(boardName));\n  // }, [boardName, dispatch]);\n\n  return (\n    \n    <>\n    \n      <section>\n        <MainDashboard />\n      </section>\n    </>\n  );\n};\nexport default ScreensPage;\n","import ScreensPage from 'components/ScreensPage/ScreensPage';\n\nconst HomePage = () => {\n  return (\n    <>\n      <ScreensPage />\n    </>\n  );\n};\nexport default HomePage;\n"],"names":["RadioBtns","_ref","parentComponent","priority","dispatch","useDispatch","filter","useBoards","user","useAuth","_useState","useState","_useState2","_slicedToArray","selectedPriorityFilter","setSelectedPriorityFilter","_useState3","_useState4","selectedPriority","setSelectedPriority","useEffect","setPriorityFilter","priorityStyles","without","grey","low","indigo","medium","pink","high","lightGreen","capitalizeFirstLetter","charAt","toUpperCase","slice","_jsxs","children","_jsx","className","scss","concat","Object","keys","map","FormControlLabel","label","Typography","style","fontSize","fontFamily","color","theme","sx","control","Radio","_objectSpread","item","value","onChange","e","target","checked","name","inputProps","backgroundColor","borderRadius","Filters","isFilterVisible","setIsFilterVisible","boardById","handleKeyDown","code","window","addEventListener","removeEventListener","styles","display","justifyContent","position","padding","background","title","type","onClick","width","height","href","SvgSprite","opacity","BtnAddColumn","clsx","PopColumn","modalTitle","modalBtnTitle","onClose","operation","idColumn","infoData","boardId","useParams","valueInput","setvalueInput","console","log","onSubmit","preventDefault","dataSubmit","board","boardName","autoComplete","placeholder","autoFocus","required","event","_event$target","prev","_defineProperty","BtnAddCard","Calendar","deadline","onFormatDeadline","inputWidth","setInputWidth","isCalendarOpen","setIsCalendarOpen","_useState5","dayjs","_useState6","selectedDate","setSelectedDate","dateFormat","format","contentWidth","length","formatedSelectedDate","createTheme","typography","join","components","MuiPaper","styleOverrides","root","border","borderColor","MuiPickersDay","fontweight","lineHeight","dayOutsideMonth","dayWithMargin","MuiPickersLayout","MuiDateCalendar","MuiPickersFadeTransitionGroup","fontWeight","letterSpacing","MuiDayCalendar","slideTransition","minHeight","header","marginTop","weekDayLabel","MuiPickersCalendarHeader","margin","borderBottom","borderBottomColor","paddingBottom","labelContainer","marginRight","marginLeft","MuiPickersArrowSwitcher","spacer","palette","primary","main","dark","LocalizationProvider","dateAdapter","AdapterDayjs","ThemeProvider","DatePicker","open","date","disablePast","dayOfWeekFormatter","day","showDaysOutsideCurrentMonth","slots","openPickerButton","slotProps","switchViewButton","previousIconButton","top","left","size","stroke","nextIconButton","right","textField","fullWidth","variant","minWidth","InputProps","disableUnderline","endAdornment","InputAdornment","cursor","edge","AddCard","id","cardTitle","description","titleValue","setTitleValue","descriptionValue","setDescriptionValue","inputDeadline","setInputDeadline","inputTitle","elements","trim","inputDescription","inputPriority","cardData","deadLine","taskOwner","idTask","reset","currentTarget","document","body","overflow","defaultValue","TitleCards","onEdit","onTrash","getBgColor","columns","isModalOpen","setIsModalOpen","isOverflowVisible","setOverflowVisible","deadlineIsToday","isPopupVisible","setisPopupVisible","handleCloseModal","handleClickOutside","popupContainer","querySelector","contains","onColumnChange","_id","updateTasks","borderLeftColor","Modal","isOpen","stopPropagation","_ref2","deleteTasks","TasksList","tasks","allTasks","filteredTasks","task","titleCard","idCard","Card","MainDashboard","_useBoards","isLoading","loading","isModalAddOpen","setIsModalAddOpen","isModalEditOpen","setIsModalEditOpen","isModalAddCardOpen","setIsModalAddCardOpen","_useState7","_useState8","activeColumnId","setActiveColumnId","_useState9","_useState10","titleColumnId","setTitleColumnId","handleCloseAddModal","handleCloseEditModal","handleCloseAddCardModal","clickOnColumnItemHandle","columnId","bg","imagesBg","image","containerStyle","backgroundImage","mobile","backgroundSize","backgroundRepeat","backgroundPosition","innerWidth","tablet","desktop","Loader","clickOnColumnTitleHandle","deleteColumn","addColumn","editColumn","addTasks","_Fragment","ScreensPage"],"sourceRoot":""}