{"version":3,"file":"static/js/146.3ae909e5.chunk.js","mappings":"mNAAaA,EAAe,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,SAAU,E,SCE9CC,EAAgB,WAC3B,OACEC,EAAAA,EAAAA,KAAA,WAAAC,UACED,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAA,MAAIE,UAAWC,EAAAA,EAAAA,OAAcF,SAAC,sBAItC,ECkBA,EApBa,WACX,IAAMG,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,KACX,GAAG,CAACH,IAEJ,IAAMN,GAAYU,EAAAA,EAAAA,IAAYb,GAG9B,OAFAc,QAAQC,IAAIZ,IAGVE,EAAAA,EAAAA,KAAA,WAASE,UAAWC,EAAAA,EAAAA,YAAmBF,UACrCD,EAAAA,EAAAA,KAAA,OAAKE,UAAWC,EAAAA,EAAAA,cAAqBF,UAGnCD,EAAAA,EAAAA,KAACD,EAAa,OAItB,E,UCMA,EA7Be,SAAHY,GAAiB,IAAZC,EAAKD,EAALC,MAEb,OACIC,EAAAA,EAAAA,MAAA,OAAKX,UAAWY,EAAAA,EAAAA,WAAgBb,SAAA,EACxBD,EAAAA,EAAAA,KAAA,UAAQe,KAAK,SAASC,QAASJ,EAAOV,UAAWY,EAAAA,EAAAA,eAAoBb,UACjED,EAAAA,EAAAA,KAAA,OAAKE,UAAWY,EAAAA,EAAAA,eAAqBG,MAAM,KAAKC,OAAO,KAAIjB,UACvDD,EAAAA,EAAAA,KAAA,OAAKmB,KAAI,GAAAC,OAAKC,EAAAA,EAAM,qBAGhCR,EAAAA,EAAAA,MAAA,OAAKX,UAAWY,EAAAA,EAAAA,eAAoBb,SAAA,EAChCY,EAAAA,EAAAA,MAAA,QAAMX,UAAWY,EAAAA,EAAAA,UAAeb,SAAA,EAC5BD,EAAAA,EAAAA,KAAA,KAAGE,UAAWY,EAAAA,EAAAA,UAAeb,SAAC,WAE9BD,EAAAA,EAAAA,KAAA,QAAAC,UACID,EAAAA,EAAAA,KAAA,OAAKE,UAAWY,EAAAA,EAAAA,SAAeG,MAAM,KAAKC,OAAO,KAAIjB,UACjDD,EAAAA,EAAAA,KAAA,OAAKmB,KAAI,GAAAC,OAAKC,EAAAA,EAAM,gCAIhCR,EAAAA,EAAAA,MAAA,MAAIX,UAAWY,EAAAA,EAAAA,mBAAwBb,SAAA,EACnCD,EAAAA,EAAAA,KAAA,MAAIE,UAAWY,EAAAA,EAAAA,eAAoBb,SAAC,cACpCD,EAAAA,EAAAA,KAAA,MAAIE,UAAWY,EAAAA,EAAAA,uBAMnC,EC2BA,EAvDgB,WAEb,OACGd,EAAAA,EAAAA,KAAA,OAAME,UAAWY,EAAAA,EAAAA,YAAiBb,UAClCY,EAAAA,EAAAA,MAAA,OAAKX,UAAWY,EAAAA,EAAAA,QAAab,SAAA,EAC1BY,EAAAA,EAAAA,MAAA,OAAKX,UAAWY,EAAAA,EAAAA,SAAcb,SAAA,EAC3BD,EAAAA,EAAAA,KAAA,OACAiB,MAAM,OACNC,OAAO,OACPhB,UAAWY,EAAAA,EAAAA,OAAYb,UAEpBD,EAAAA,EAAAA,KAAA,OAAKmB,KAAI,GAAAC,OAAKE,EAAAA,EAAS,mBAE1BtB,EAAAA,EAAAA,KAAA,MAAIE,UAAWY,EAAAA,EAAAA,QAAab,SAAC,iBAEnCD,EAAAA,EAAAA,KAAA,MAAIE,UAAWY,EAAAA,EAAAA,WAAgBb,SAAC,eAChCD,EAAAA,EAAAA,KAAA,OAAKE,UAAWY,EAAAA,EAAAA,SAAcb,UAC3BY,EAAAA,EAAAA,MAAA,OAAKX,UAAWY,EAAAA,EAAAA,mBAAwBb,SAAA,EACrCY,EAAAA,EAAAA,MAAA,QAAMX,UAAWY,EAAAA,EAAAA,kBAAuBb,SAAA,CAAC,aAASD,EAAAA,EAAAA,KAAA,SAAS,iBAC3DA,EAAAA,EAAAA,KAAA,UAAQE,UAAWY,EAAAA,EAAAA,oBAAyBb,UACzCD,EAAAA,EAAAA,KAAA,OACAiB,MAAM,OACNC,OAAO,OACEhB,UAAWY,EAAAA,EAAAA,kBAAuBb,UACxCD,EAAAA,EAAAA,KAAA,OAAKmB,KAAI,GAAAC,OAAKE,EAAAA,EAAS,0BAK1BtB,EAAAA,EAAAA,KAAA,OAAAC,SAAK,0OACRY,EAAAA,EAAAA,MAAA,OAAKX,UAAWY,EAAAA,EAAAA,OAAYb,SAAA,EACzBD,EAAAA,EAAAA,KAAA,OAAKE,UAAWY,EAAAA,EAAAA,mBAChBD,EAAAA,EAAAA,MAAA,KAAGX,UAAWY,EAAAA,EAAAA,WAAgBb,SAAA,CAAC,yBAC5BD,EAAAA,EAAAA,KAAA,QAAME,UAAWY,EAAAA,EAAAA,cAAmBb,SAAC,aAAgB,mFAExDY,EAAAA,EAAAA,MAAA,UAAQX,UAAWY,EAAAA,EAAAA,aAAkBb,SAAA,EAClCD,EAAAA,EAAAA,KAAA,OACGiB,MAAM,OACNC,OAAO,OACPhB,UAAWY,EAAAA,EAAAA,cAAmBb,UACjCD,EAAAA,EAAAA,KAAA,OAAKmB,KAAI,GAAAC,OAAKE,EAAAA,EAAS,yBACjB,KAACtB,EAAAA,EAAAA,KAAA,QAAME,UAAWY,EAAAA,EAAAA,qBAA0Bb,SAAC,sBAEzDY,EAAAA,EAAAA,MAAA,UAAQX,UAAWY,EAAAA,EAAAA,eAAoBb,SAAA,EACpCD,EAAAA,EAAAA,KAAA,OACMiB,MAAM,OACNC,OAAO,OACPhB,UAAWY,EAAAA,EAAAA,YAAiBb,UAC/BD,EAAAA,EAAAA,KAAA,OAAKmB,KAAI,GAAAC,OAAKE,EAAAA,EAAS,oBACjB,KAACtB,EAAAA,EAAAA,KAAA,QAAME,UAAWY,EAAAA,EAAAA,aAAkBb,SAAC,mBAI7D,ECUA,EA7DiB,WAEf,IAAAsB,GAAoCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5CI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,IAGhCnB,EAAAA,EAAAA,YAAU,WACR,IAAMuB,EAAkB,SAAAC,GACH,WAAfA,EAAMC,MAAqBC,OAAOC,YAAc,MAClDL,GAAc,EAElB,EAIA,OAFAI,OAAOE,iBAAiB,UAAWL,GAE5B,WACLG,OAAOG,oBAAoB,UAAWN,EACxC,CAEF,GAAG,CAACF,EAAYC,KAGhBtB,EAAAA,EAAAA,YAAU,WACR,IAAM8B,EAAkB,WAClBJ,OAAOC,YAAc,KACvBL,GAAc,GAEdA,GAAc,EAElB,EAMA,OAJAQ,IAEAJ,OAAOE,iBAAiB,SAAUE,GAE3B,WACLJ,OAAOG,oBAAoB,SAAUC,EACvC,CACF,GAAG,CAACR,IAcJ,OACE5B,EAAAA,EAAAA,KAAAqC,EAAAA,SAAA,CAAApC,UACEY,EAAAA,EAAAA,MAAA,OAAKG,QARmB,SAAAc,GACtBA,EAAMQ,SAAWR,EAAMS,eAAiBP,OAAOC,YAAc,MAC/DL,GAAc,EAElB,EAIsC3B,SAAA,EAClCD,EAAAA,EAAAA,KAACwC,EAAM,CAAC5B,MAdQ,WAClBgB,GAAeD,EACjB,KAaI3B,EAAAA,EAAAA,KAACyC,EAAI,IACFd,IAAc3B,EAAAA,EAAAA,KAAC0C,EAAO,QAI/B,C","sources":["redux/board/boardSelectors.js","components/MainDashboard/MainDashboard.jsx","components/Home/Home.jsx","components/Header/Header.jsx","components/Sidebar/Sidebar.jsx","pages/HomePage.jsx"],"sourcesContent":["export const selectBoards = state => state.board.allBoards;","import styles from 'styles/index.module.scss';\n\nexport const MainDashboard = () => {\n  return (\n    <section>\n      <div>\n        <h2 className={styles.KkTest}>Main Dashboard</h2>\n      </div>\n    </section>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styles from 'styles/index.module.scss';\nimport { getAllBoards } from 'redux/board/boardOperations';\nimport { selectBoards } from 'redux/board/boardSelectors';\n// import AddBoard from './testAddBoard';\nimport { MainDashboard } from 'components/MainDashboard/MainDashboard';\n\nconst Home = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllBoards());\n  }, [dispatch]);\n\n  const allBoards = useSelector(selectBoards);\n  console.log(allBoards);\n\n  return (\n    <section className={styles.AfWelcomReg}>\n      <div className={styles.AfWelcomRegWr}>\n        {/* <h1>Task component</h1> */}\n        {/* <AddBoard></AddBoard> */}\n        <MainDashboard />\n      </div>\n    </section>\n  );\n};\nexport default Home;\n","import scss from '../../styles/index.module.scss';\nimport sprite from '../../images/sprite.svg';\n\n\nconst Header = ({click}) => {\n\n    return (\n        <div className={scss.headerWrap}>\n                <button type=\"button\" onClick={click} className={scss.btnSideBarOpen}>\n                    <svg className={scss.svgSideBarOpen} width=\"24\" height=\"24\">\n                        <use href={`${sprite}#icon-menu`}></use>\n                    </svg>\n                </button>\n            <div className={scss.headerTextWrap}>\n                <span className={scss.themeWrap}>\n                    <p className={scss.themeText}>Theme</p>\n                    {/* Вставити компонент з темою */}\n                    <span>\n                        <svg className={scss.svgTheme} width=\"16\" height=\"16\">\n                            <use href={`${sprite}#icon-chevron-down`}></use>\n                        </svg>\n                    </span>\n                </span>\n                <ul className={scss.headerUserInfoWrap}>\n                    <li className={scss.headerUserName}>UserName</li>\n                    <li className={scss.headerAvatar}></li>\n                </ul>\n                \n            </div>\n        </div>     \n    )\n}\n\nexport default Header;\n","import scss from 'styles/index.module.scss';\nimport SvgSprite from 'images/sprite.svg';\n\nconst Sidebar = () => {\n  \n   return (\n      <div  className={scss.sidebarWrap}>\n      <div className={scss.sidebar}>\n         <div className={scss.sbHeader}>\n            <svg\n            width=\"32px\"\n            height=\"32px\"\n            className={scss.sbLogo}\n            >\n               <use href={`${SvgSprite}#icon-logo`}></use>\n            </svg>\n            <h2 className={scss.sbTitle}>Task Pro</h2>\n         </div>\n      <h3 className={scss.sbSubtitle}>My boards</h3> \n      <div className={scss.sbBoards}>\n         <div className={scss.sbCreateBoardBlock}>\n            <span className={scss.sbCreateBoardText}>Create a <br></br> new board</span>\n            <button className={scss.sbCreateBoardButton}>\n               <svg\n               width=\"20px\"\n               height=\"20px\"\n                        className={scss.sbCreateBoardLogo}>\n                  <use href={`${SvgSprite}#icon-plus`}></use>\n                  </svg>\n               </button>               \n            </div>\n         </div>\n               <div>Тут буде елемент зі списком створених дошок</div>\n            <div className={scss.sbHelp}>\n               <div className={scss.sbHelpPngCactus}></div>\n               <p className={scss.sbHelpText}>If you need help with\n                  <span className={scss.cbTaskProSpan}> TaskPro</span>,\n                  check out our support resources or reach out to our customer support team.</p>\n               <button className={scss.sbHelpButton}>\n                  <svg\n                     width=\"20px\"\n                     height=\"20px\"\n                     className={scss.sbNeedhelpSvg}>\n                  <use href={`${SvgSprite}#icon-help-circle`}></use>\n                  </svg> <span className={scss.sbNeedHelpButtonText}>Need help?</span></button>\n            </div>\n            <button className={scss.sbLogoutButton}>\n               <svg\n                     width=\"32px\"\n                     height=\"32px\"\n                     className={scss.sbLogoutSvg}>\n                  <use href={`${SvgSprite}#icon-logout`}></use>\n                  </svg> <span className={scss.sbLogoutText}>Log out</span></button>\n         </div>\n         </div>\n);\n};\n\nexport default Sidebar;","import Home from 'components/Home/Home';\nimport Header from 'components/Header/Header.jsx';\nimport { useState, useEffect} from 'react';\nimport Sidebar from 'components/Sidebar/Sidebar';\n\nconst HomePage = () => {\n\n  const [menuActive, setMenuActive] = useState(false);\n  \n\n  useEffect(() => {\n    const hendleEscClose  = event => {\n      if (event.code === 'Escape' && window.innerWidth <= 1439) {\n        setMenuActive(false);\n      }\n    };\n\n    window.addEventListener('keydown', hendleEscClose);\n\n    return () => {\n      window.removeEventListener('keydown', hendleEscClose);\n    };\n\n  }, [menuActive, setMenuActive]);\n\n\n  useEffect(() => {\n    const handleMinXlSize = () => {\n      if (window.innerWidth >= 1440) {\n        setMenuActive(true);\n      } else {\n        setMenuActive(false);\n      }\n    };\n\n    handleMinXlSize();\n\n    window.addEventListener('resize', handleMinXlSize);\n\n    return () => {\n      window.removeEventListener('resize', handleMinXlSize);\n    };\n  }, [setMenuActive]);\n\n\n  const handleClick = () => {\n    setMenuActive(!menuActive);\n  }; \n\n  \n  const hendleBackdropClose = event => {\n    if (event.target === event.currentTarget && window.innerWidth <= 1439) {\n      setMenuActive(false);\n    }\n  };\n\n  return (\n    <>\n      <div onClick={hendleBackdropClose}>\n      <Header click={handleClick}/>\n      <Home />\n        {menuActive && <Sidebar />}\n        </div>\n    </>     \n  )\n};\nexport default HomePage;"],"names":["selectBoards","state","board","allBoards","MainDashboard","_jsx","children","className","styles","dispatch","useDispatch","useEffect","getAllBoards","useSelector","console","log","_ref","click","_jsxs","scss","type","onClick","width","height","href","concat","sprite","SvgSprite","_useState","useState","_useState2","_slicedToArray","menuActive","setMenuActive","hendleEscClose","event","code","window","innerWidth","addEventListener","removeEventListener","handleMinXlSize","_Fragment","target","currentTarget","Header","Home","Sidebar"],"sourceRoot":""}