{"version":3,"file":"static/js/52.6f003dbb.chunk.js","mappings":"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","sources":["components/Registration/registerSchema.jsx","components/Registration/RegistrationForm.jsx","components/Registration/Registration.jsx","pages/RegistrationPage.jsx","utils/HandlingBackendErrors.js"],"sourcesContent":["import { object, string } from 'yup';\n\nexport const registerSchema = object({\n  name: string()\n    .matches(/^[0-9a-zA-Z!@#$%^&*]{2,32}$/, 'Type in correct name')\n    .trim()\n    .required('Name is required'),\n  email: string()\n    .matches(\n      /^([a-zA-Z0-9_-]+\\.)*[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/,\n      'Type in correct email'\n    ).required('Email is required'),\n  password: string()\n    .matches(\n      /^[0-9a-zA-Z!@#$%^&*]{6,64}$/,\n      'Type in correct password, at least 6 characters'\n    )\n    .required('Password is required'),\n});\n","import { useState } from 'react';\nimport styles from 'styles/index.module.scss';\nimport SvgSprite from 'images/sprite.svg';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport { userRegistration } from 'redux/auth/authOperations';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { registerSchema } from './registerSchema';\nimport HandlingBackendErrors from 'utils/HandlingBackendErrors';\nimport { useAuth } from 'hooks';\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst RegistrationForm = () => {\n  const { loading } = useAuth();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [showHidePassword, changeShowHidePassword] = useState(false);\n  const [showError, addShowError] = useState('');\n\n  const handleSubmit = async (values, { resetForm }) => {\n    const dataRegister = { ...values };\n    console.log('dataRegister', dataRegister);\n    const res = await dispatch(userRegistration(dataRegister));\n    if (res.error) {\n      const backendErr = HandlingBackendErrors(res.payload);\n      addShowError(backendErr);\n    } else {\n      navigate('/home');\n      resetForm();\n    }\n  };\n\n  const togglePassword = () => {\n    changeShowHidePassword(!showHidePassword);\n    console.log(showHidePassword);\n  };\n\n  return (\n    <Formik\n      validationSchema={registerSchema}\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n    >\n      {({ handleChange, values }) => (\n        <Form className={styles.AfWelcomRegForm}>\n          <div className={styles.AfWelcomRegFormNav}>\n            <NavLink\n              to=\"/auth/register\"\n              className={styles.AfWelcomRegFormNavReg}\n            >\n              Registration\n            </NavLink>\n            <NavLink to=\"/auth/login\" className={styles.AfWelcomRegFormNavLog}>\n              Log In\n            </NavLink>\n          </div>\n          <div className={styles.AfWelcomBacError}>{showError}</div>\n          <div className={styles.AfWelcomRegFormInCn}>\n            <div className={styles.AfWelcomRegFormWrInp}>\n              <div className={styles.AfWelcomFormWrError}>\n                <ErrorMessage\n                  className={styles.AfWelcomFormError}\n                  name=\"name\"\n                  component=\"div\"\n                />\n              </div>\n\n              <Field\n                autoFocus\n                className={styles.AfWelcomRegFormInput}\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Enter your name\"\n                onChange={handleChange('name')}\n                value={values.name || ''}\n                required\n              />\n            </div>\n            <div className={styles.AfWelcomRegFormWrInp}>\n              <div className={styles.AfWelcomFormWrError}>\n                <ErrorMessage\n                  className={styles.AfWelcomFormError}\n                  name=\"email\"\n                  component=\"div\"\n                />\n              </div>\n\n              <Field\n                className={styles.AfWelcomRegFormInput}\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Enter your email\"\n                onChange={handleChange('email')}\n                value={values.email || ''}\n                required\n              />\n            </div>\n            <div className={styles.AfWelcomRegFormWrInp}>\n              <div className={styles.AfWelcomFormWrError}>\n                <ErrorMessage\n                  className={styles.AfWelcomFormError}\n                  name=\"password\"\n                  component=\"div\"\n                />\n              </div>\n              <div className={styles.AfWelcomShowPassWr}>\n                <Field\n                  className={styles.AfWelcomRegFormInput}\n                  type={showHidePassword ? 'text' : 'password'}\n                  name=\"password\"\n                  placeholder=\"Create a password\"\n                  onChange={handleChange('password')}\n                  value={values.password || ''}\n                  required\n                />\n                <svg\n                  className={styles.AfWelcomFormIconShowPass}\n                  alt=\"watch password icon\"\n                  onClick={togglePassword}\n                >\n                  <use href={SvgSprite + '#icon-eye'} />\n                </svg>\n              </div>\n            </div>\n          </div>\n\n          <button type=\"submit\" className={styles.AfWelcomRegFormButton}>\n            Register Now\n            {loading && (\n              <div className={styles.AfWelcomRegFormButtonLoad}></div>\n            )}\n          </button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\nexport default RegistrationForm;\n","import RegistrationForm from './RegistrationForm';\nimport styles from 'styles/index.module.scss';\n\nconst Registration = () => {\n  return (\n    <section className={styles.AfWelcomReg}>\n      <div className={styles.AfWelcomRegWr}>\n        <RegistrationForm />\n      </div>\n    </section>\n  );\n};\nexport default Registration;\n","import Registration from 'components/Registration/Registration';\nconst RegistrationPage = () => {\n  return <Registration />;\n};\nexport default RegistrationPage;\n","const errMessageList = {\n    400: 'Please enter correct email or password',\n    401: 'Password or email is incorrect',\n    403: 'Forbidden',\n    404: 'No Such Page',\n    409: 'The email address you have entered is already associated with another account'\n}\n\nexport default function HandlingBackendErrors(err){\n    return errMessageList[err];\n}"],"names":["registerSchema","object","name","string","matches","trim","required","email","password","initialValues","loading","useAuth","navigate","useNavigate","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","showHidePassword","changeShowHidePassword","_useState3","_useState4","showError","addShowError","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","_ref","resetForm","dataRegister","res","backendErr","wrap","_context","prev","next","_objectSpread","console","log","userRegistration","sent","error","HandlingBackendErrors","payload","stop","_x","_x2","apply","arguments","togglePassword","_jsx","Formik","validationSchema","onSubmit","children","_ref3","handleChange","_jsxs","Form","className","styles","NavLink","to","ErrorMessage","component","Field","autoFocus","type","placeholder","onChange","value","alt","onClick","href","SvgSprite","RegistrationForm","Registration","errMessageList","err"],"sourceRoot":""}