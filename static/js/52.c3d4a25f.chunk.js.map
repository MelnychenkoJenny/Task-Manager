{"version":3,"file":"static/js/52.c3d4a25f.chunk.js","mappings":"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","sources":["components/Registration/registerSchema.jsx","components/Registration/RegistrationForm.jsx","components/Registration/Registration.jsx","pages/RegistrationPage.jsx"],"sourcesContent":["import { object, string } from 'yup';\n\nexport const registerSchema = object({\n  name: string()\n    .matches(/^[0-9a-zA-Z!@#$%^&*]{2,32}$/, 'Type in correct name')\n    .trim()\n    .required('Name is required'),\n  email: string()\n    .matches(\n      /^([a-zA-Z0-9_-]+\\.)*[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/,\n      'Type in correct email'\n    ).required('Email is required'),\n  password: string()\n    .matches(\n      /^[0-9a-zA-Z!@#$%^&*]{6,64}$/,\n      'Type in correct password, at least 6 characters'\n    )\n    .required('Password is required'),\n});\n","// import { useState } from 'react';\nimport styles from 'styles/index.module.scss';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport authOperations from 'redux/auth/authOperations';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { registerSchema } from './registerSchema';\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst RegistrationForm = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const handleSubmit = async (values, { resetForm }) => {\n    // Потрібно ще додадти логіку з неможливістю відправити поле, яке містить пробіли\n    // { name, email, password }\n    // const dataRegister = {\n    //   email: email.trim(),\n    //   name: name.trim(),\n    //   password: password.trim(),\n    // };\n    const dataRegister = { ...values };\n\n    const res = await dispatch(authOperations.userRegistration(dataRegister));\n    if (res.error) {\n      console.log(res.payload);\n    } else {\n      navigate('/home');\n    }\n    resetForm();\n  };\n\n  return (\n    <Formik\n      validationSchema={registerSchema}\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n    >\n      {({ handleChange, values }) => (\n        <Form className={styles.AfWelcomRegForm}>\n          <div className={styles.AfWelcomRegFormNav}>\n            <NavLink\n              to=\"/auth/register\"\n              className={styles.AfWelcomRegFormNavReg}\n            >\n              Registration\n            </NavLink>\n            <NavLink to=\"/auth/login\" className={styles.AfWelcomRegFormNavLog}>\n              Log In\n            </NavLink>\n          </div>\n          <div className={styles.AfWelcomRegFormInCn}>\n            <div className={styles.AfWelcomRegFormWrInp}>\n              <Field\n                autoFocus\n                className={styles.AfWelcomRegFormInput}\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Enter your name\"\n                onChange={handleChange('name')}\n                value={values.name || ''}\n                required\n              />\n            </div>\n            <div className={styles.AfWelcomRegFormWrInp}>\n              <Field\n                className={styles.AfWelcomRegFormInput}\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Enter your email\"\n                onChange={handleChange('email')}\n                value={values.email || ''}\n                required\n              />\n            </div>\n            <div className={styles.AfWelcomRegFormWrInp}>\n              <Field\n                className={styles.AfWelcomRegFormInput}\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Create a password\"\n                onChange={handleChange('password')}\n                value={values.password || ''}\n                required\n              />\n            </div>\n          </div>\n          <ErrorMessage\n            className={styles.AfWelcomRegFormError}\n            name=\"password\"\n            component=\"div\"\n          />\n          <button type=\"submit\" className={styles.AfWelcomRegFormButton}>\n            Register Now\n          </button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\nexport default RegistrationForm;\n","import RegistrationForm from './RegistrationForm';\nimport styles from 'styles/index.module.scss';\n\nconst Registration = () => {\n  return (\n    <section className={styles.AfWelcomReg}>\n      <div className={styles.AfWelcomRegWr}>\n        <RegistrationForm />\n      </div>\n    </section>\n  );\n};\nexport default Registration;\n","import Registration from 'components/Registration/Registration';\nconst RegistrationPage = () => {\n  return <Registration />;\n};\nexport default RegistrationPage;\n"],"names":["registerSchema","object","name","string","matches","trim","required","email","password","initialValues","navigate","useNavigate","dispatch","useDispatch","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","_ref","resetForm","dataRegister","res","wrap","_context","prev","next","_objectSpread","authOperations","sent","error","console","log","payload","stop","_x","_x2","apply","arguments","_jsx","Formik","validationSchema","onSubmit","children","_ref3","handleChange","_jsxs","Form","className","styles","NavLink","to","Field","autoFocus","type","placeholder","onChange","value","ErrorMessage","component","RegistrationForm","Registration"],"sourceRoot":""}