{"version":3,"file":"static/js/610.bc67ee15.chunk.js","mappings":"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","sources":["components/Login/loginSchema.jsx","components/Login/LoginForm.jsx","components/Login/Login.jsx","pages/SignInPage.jsx"],"sourcesContent":["import { object, string } from 'yup';\n\nexport const loginSchema = object({\n    email: string()\n      .matches(\n        /^([a-zA-Z0-9_-]+\\.)*[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/,\n        'Type in correct email'\n      )\n      .required('Email is required'),\n    password: string()\n      .matches(/^[0-9a-zA-Z!@#$%^&*]{6,64}$/, 'Type in correct password, at least 6 characters')\n      .required('Password is required'),\n  });\n  ","import { useState } from 'react';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport styles from 'styles/index.module.scss';\nimport SvgSprite from 'images/sprite.svg';\nimport { loginSchema } from './loginSchema';\nimport { useDispatch } from 'react-redux';\nimport authOperations from 'redux/auth/authOperations';\n\nconst initialValues = {\n  email: '',\n  password: '',\n  show: false,\n};\n\nconst LoginForm = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const [showHidePassword, changeShowHidePassword] = useState(false);\n\n  const togglePassword = () => {\n    changeShowHidePassword(!showHidePassword);\n    console.log(showHidePassword);\n  };\n\n  const handleSubmit = async ({email, password}, { resetForm }) => {\n    const dataLogin = { email, password };\n    \n    const res = await dispatch(authOperations.userLogin(dataLogin));\n    if (res.error) {\n      console.log(res.payload);\n    } else {\n      navigate('/home');\n    }\n    resetForm();\n  };\n\n  return (\n    <Formik\n      validationSchema={loginSchema}\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n    >\n      {({ handleChange, values }) => (\n        <Form autoComplete=\"off\" className={styles.AfWelcomRegForm}>\n          <div className={styles.AfWelcomRegFormNav}>\n            <NavLink\n              to=\"/auth/register\"\n              className={styles.AfWelcomLogFormNavReg}\n            >\n              Registration\n            </NavLink>\n            <NavLink to=\"/auth/login\" className={styles.AfWelcomLogFormNavLog}>\n              Log In\n            </NavLink>\n          </div>\n          <div className={styles.AfWelcomRegFormInCn}>\n            <div className={styles.AfWelcomRegFormWrInp}>\n              <Field\n                className={styles.AfWelcomRegFormInput}\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Enter your email\"\n                onChange={handleChange('email')}\n                required\n              />\n            </div>\n            <div className={styles.AfWelcomRegFormWrInp}>\n              <Field\n                className={styles.AfWelcomRegFormInput}\n                id=\"password\"\n                type={showHidePassword ? 'text' : 'password'}\n                name=\"password\"\n                placeholder=\"Confirm your password\"\n                onChange={handleChange('password')}\n                required\n              />\n              <svg\n                className={styles.AfWelcomRegFormIconShowPass}\n                alt=\"watch password icon\"\n                onClick={togglePassword}\n              >\n                <use href={SvgSprite + '#icon-eye'} />\n              </svg>\n            </div>\n          </div>\n          <ErrorMessage\n            className={styles.AfWelcomRegFormError}\n            name=\"password\"\n            component=\"div\"\n          />\n          <button type=\"submit\" className={styles.AfWelcomRegFormButton}>\n            Log In Now\n          </button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\nexport default LoginForm;\n","import SignInForm from './LoginForm';\nimport styles from 'styles/index.module.scss';\nconst Login = () => {\n  return (\n    <section className={styles.AfWelcomReg}>\n      <div className={styles.AfWelcomRegWr}>\n        <SignInForm />\n      </div>\n    </section>\n  );\n};\nexport default Login;\n","import Login from 'components/Login/Login';\n\nconst SignInPage = () => {\n  return <Login />;\n};\nexport default SignInPage;\n"],"names":["loginSchema","object","email","string","matches","required","password","initialValues","show","navigate","useNavigate","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","showHidePassword","changeShowHidePassword","togglePassword","console","log","handleSubmit","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","_ref2","resetForm","dataLogin","res","wrap","_context","prev","next","authOperations","sent","error","payload","stop","_x","_x2","apply","arguments","_jsx","Formik","validationSchema","onSubmit","children","_ref4","handleChange","values","_jsxs","Form","autoComplete","className","styles","NavLink","to","Field","type","name","placeholder","onChange","id","alt","onClick","href","SvgSprite","ErrorMessage","component","SignInForm","Login"],"sourceRoot":""}