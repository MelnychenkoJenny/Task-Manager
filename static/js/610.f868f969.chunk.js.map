{"version":3,"file":"static/js/610.f868f969.chunk.js","mappings":"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","sources":["components/Login/loginSchema.jsx","components/Login/LoginForm.jsx","components/Login/Login.jsx","pages/SignInPage.jsx","utils/HandlingBackendErrors.js"],"sourcesContent":["import { object, string } from 'yup';\n\nexport const loginSchema = object({\n    email: string()\n      .matches(\n        /^([a-zA-Z0-9_-]+\\.)*[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/,\n        'Type in correct email'\n      )\n      .required('Email is required'),\n    password: string()\n      .matches(/^[0-9a-zA-Z!@#$%^&*]{6,64}$/, 'Type in correct password, at least 6 characters')\n      .required('Password is required'),\n  });\n  ","import { useState } from 'react';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport styles from 'styles/index.module.scss';\nimport SvgSprite from 'images/sprite.svg';\nimport { loginSchema } from './loginSchema';\nimport { useDispatch } from 'react-redux';\nimport {userLogin} from 'redux/auth/authOperations';\nimport HandlingBackendErrors from 'utils/HandlingBackendErrors';\n\nconst initialValues = {\n  email: '',\n  password: '',\n  show: false,\n};\n\nconst LoginForm = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const [showHidePassword, changeShowHidePassword] = useState(false);\n  const [showError, addShowError] = useState('');\n\n  const togglePassword = () => {\n    changeShowHidePassword(!showHidePassword);\n  };\n\n  const handleSubmit = async ({ email, password }, { resetForm }) => {\n    const dataLogin = { email, password };\n    const res = await dispatch(userLogin(dataLogin));\n\n\n    if (res.error) {\n      const backendErr = HandlingBackendErrors(res.payload);\n      addShowError(backendErr);\n    } else {\n      navigate('/home');\n      resetForm();\n    }\n  };\n\n  return (\n    <Formik\n      validationSchema={loginSchema}\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n    >\n      {({ handleChange, values }) => (\n        <Form autoComplete=\"off\" className={styles.AfWelcomRegForm}>\n          <div className={styles.AfWelcomRegFormNav}>\n            <NavLink\n              to=\"/auth/register\"\n              className={styles.AfWelcomLogFormNavReg}\n            >\n              Registration\n            </NavLink>\n            <NavLink to=\"/auth/login\" className={styles.AfWelcomLogFormNavLog}>\n              Log In\n            </NavLink>\n          </div>\n          <div className={styles.AfWelcomBacError}>{showError}</div>\n\n          <div className={styles.AfWelcomRegFormInCn}>\n            <div className={styles.AfWelcomRegFormWrInp}>\n              <div className={styles.AfWelcomFormWrError}>\n                <ErrorMessage\n                  className={styles.AfWelcomFormError}\n                  name=\"email\"\n                  component=\"div\"\n                />\n              </div>\n              <Field\n                className={styles.AfWelcomRegFormInput}\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Enter your email\"\n                onChange={handleChange('email')}\n                required\n              />\n            </div>\n            <div className={styles.AfWelcomRegFormWrInp}>\n              <div className={styles.AfWelcomFormWrError}>\n                <ErrorMessage\n                  className={styles.AfWelcomFormError}\n                  name=\"password\"\n                  component=\"div\"\n                />\n              </div>\n              <div className={styles.AfWelcomShowPassWr}>\n                <Field\n                  className={styles.AfWelcomRegFormInput}\n                  id=\"password\"\n                  type={showHidePassword ? 'text' : 'password'}\n                  name=\"password\"\n                  placeholder=\"Confirm your password\"\n                  onChange={handleChange('password')}\n                  required\n                />\n                <svg\n                  className={styles.AfWelcomFormIconShowPass}\n                  alt=\"watch password icon\"\n                  onClick={togglePassword}\n                >\n                  <use href={SvgSprite + '#icon-eye'} />\n                </svg>\n              </div>\n            </div>\n          </div>\n\n          <button type=\"submit\" className={styles.AfWelcomRegFormButton}>\n            Log In Now\n          </button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\nexport default LoginForm;\n","import SignInForm from './LoginForm';\nimport styles from 'styles/index.module.scss';\nconst Login = () => {\n  return (\n    <section className={styles.AfWelcomReg}>\n      <div className={styles.AfWelcomRegWr}>\n        <SignInForm />\n      </div>\n    </section>\n  );\n};\nexport default Login;\n","import Login from 'components/Login/Login';\n\nconst SignInPage = () => {\n  return <Login />;\n};\nexport default SignInPage;\n","const errMessageList = {\n    400: 'Please enter correct email or password',\n    401: 'Password or email is incorrect',\n    403: 'Forbidden',\n    404: 'No Such Page',\n    409: 'The email address you have entered is already associated with another account'\n}\n\nexport default function HandlingBackendErrors(err){\n    return errMessageList[err];\n}"],"names":["loginSchema","object","email","string","matches","required","password","initialValues","show","navigate","useNavigate","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","showHidePassword","changeShowHidePassword","_useState3","_useState4","showError","addShowError","togglePassword","handleSubmit","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","_ref2","resetForm","dataLogin","res","backendErr","wrap","_context","prev","next","userLogin","sent","error","HandlingBackendErrors","payload","stop","_x","_x2","apply","arguments","_jsx","Formik","validationSchema","onSubmit","children","_ref4","handleChange","values","_jsxs","Form","autoComplete","className","styles","NavLink","to","ErrorMessage","name","component","Field","type","placeholder","onChange","id","alt","onClick","href","SvgSprite","SignInForm","Login","errMessageList","err"],"sourceRoot":""}