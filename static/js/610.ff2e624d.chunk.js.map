{"version":3,"file":"static/js/610.ff2e624d.chunk.js","mappings":"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","sources":["components/Login/loginSchema.jsx","components/Login/LoginForm.jsx","components/Login/Login.jsx","pages/SignInPage.jsx","utils/HandlingBackendErrors.js"],"sourcesContent":["import { object, string } from 'yup';\n\nexport const loginSchema = object({\n    email: string()\n      .matches(\n        /^([a-zA-Z0-9_-]+\\.)*[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/,\n        'Type in correct email'\n      )\n      .required('Email is required'),\n    password: string()\n      .matches(/^[0-9a-zA-Z!@#$%^&*]{6,64}$/, 'Type in correct password, at least 6 characters')\n      .required('Password is required'),\n  });\n  ","import { useState } from 'react';\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport styles from 'styles/index.module.scss';\r\nimport SvgSprite from 'images/sprite.svg';\r\nimport { loginSchema } from './loginSchema';\r\nimport { useDispatch } from 'react-redux';\r\nimport { userLogin } from 'redux/auth/authOperations';\r\nimport HandlingBackendErrors from 'utils/HandlingBackendErrors';\r\nimport { useAuth } from 'hooks';\r\n\r\nconst initialValues = {\r\n  email: '',\r\n  password: '',\r\n  show: false,\r\n};\r\n\r\nconst LoginForm = () => {\r\n  const { loading } = useAuth();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const [showHidePassword, changeShowHidePassword] = useState(false);\r\n  const [showError, addShowError] = useState('');\r\n\r\n  const togglePassword = () => {\r\n    changeShowHidePassword(!showHidePassword);\r\n  };\r\n\r\n  const handleSubmit = async ({ email, password }, { resetForm }) => {\r\n    const dataLogin = { email, password };\r\n    const res = await dispatch(userLogin(dataLogin));\r\n\r\n    if (res.error) {\r\n      const backendErr = HandlingBackendErrors(res.payload);\r\n      addShowError(backendErr);\r\n    } else {\r\n      navigate('/home');\r\n      resetForm();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      validationSchema={loginSchema}\r\n      initialValues={initialValues}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      {({ handleChange, values }) => (\r\n        <Form autoComplete=\"off\" className={styles.AfWelcomRegForm}>\r\n          <div className={styles.AfWelcomRegFormNav}>\r\n            <NavLink\r\n              to=\"/auth/register\"\r\n              className={styles.AfWelcomLogFormNavReg}\r\n            >\r\n              Registration\r\n            </NavLink>\r\n            <NavLink to=\"/auth/login\" className={styles.AfWelcomLogFormNavLog}>\r\n              Log In\r\n            </NavLink>\r\n          </div>\r\n          <div className={styles.AfWelcomBacError}>{showError}</div>\r\n\r\n          <div className={styles.AfWelcomRegFormInCn}>\r\n            <div className={styles.AfWelcomRegFormWrInp}>\r\n              <div className={styles.AfWelcomFormWrError}>\r\n                <ErrorMessage\r\n                  className={styles.AfWelcomFormError}\r\n                  name=\"email\"\r\n                  component=\"div\"\r\n                />\r\n              </div>\r\n              <Field\r\n                className={styles.AfWelcomRegFormInput}\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Enter your email\"\r\n                onChange={handleChange('email')}\r\n                required\r\n              />\r\n            </div>\r\n            <div className={styles.AfWelcomRegFormWrInp}>\r\n              <div className={styles.AfWelcomFormWrError}>\r\n                <ErrorMessage\r\n                  className={styles.AfWelcomFormError}\r\n                  name=\"password\"\r\n                  component=\"div\"\r\n                />\r\n              </div>\r\n              <div className={styles.AfWelcomShowPassWr}>\r\n                <Field\r\n                  className={styles.AfWelcomRegFormInput}\r\n                  id=\"password\"\r\n                  type={showHidePassword ? 'text' : 'password'}\r\n                  name=\"password\"\r\n                  placeholder=\"Confirm your password\"\r\n                  onChange={handleChange('password')}\r\n                  required\r\n                />\r\n                <svg\r\n                  className={styles.AfWelcomFormIconShowPass}\r\n                  alt=\"watch password icon\"\r\n                  onClick={togglePassword}\r\n                >\r\n                  <use href={SvgSprite + '#icon-eye'} />\r\n                </svg>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <button type=\"submit\" className={styles.AfWelcomRegFormButton}>\r\n            Log In Now\r\n            {loading && (\r\n              <div className={styles.AfWelcomRegFormButtonLoad}></div>\r\n            )}\r\n          </button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\nexport default LoginForm;\r\n","import SignInForm from './LoginForm';\r\nimport styles from 'styles/index.module.scss';\r\nimport { useAuth } from 'hooks';\r\n\r\nconst Login = () => {\r\n  const { user } = useAuth();\r\n\r\n  return (\r\n    <section className={styles.AfWelcomReg} data-theme={user.theme}>\r\n      <div className={styles.AfWelcomRegWr}>\r\n        <SignInForm />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\nexport default Login;\r\n","import Login from 'components/Login/Login';\n\nconst SignInPage = () => {\n  return <Login />;\n};\nexport default SignInPage;\n","const errMessageList = {\r\n  400: 'Please enter correct email or password',\r\n  401: 'Password or email is incorrect',\r\n  403: 'Forbidden',\r\n  404: 'No Such Page',\r\n  409: 'The email address you have entered is already associated with another account',\r\n};\r\n\r\nexport default function HandlingBackendErrors(err) {\r\n  return errMessageList[err];\r\n}\r\n"],"names":["loginSchema","object","email","string","matches","required","password","initialValues","show","loading","useAuth","navigate","useNavigate","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","showHidePassword","changeShowHidePassword","_useState3","_useState4","showError","addShowError","togglePassword","handleSubmit","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","_ref2","resetForm","dataLogin","res","backendErr","wrap","_context","prev","next","userLogin","sent","error","HandlingBackendErrors","payload","stop","_x","_x2","apply","arguments","_jsx","Formik","validationSchema","onSubmit","children","_ref4","handleChange","values","_jsxs","Form","autoComplete","className","styles","NavLink","to","ErrorMessage","name","component","Field","type","placeholder","onChange","id","alt","onClick","href","SvgSprite","user","theme","SignInForm","Login","errMessageList","err"],"sourceRoot":""}