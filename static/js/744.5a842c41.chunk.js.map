{"version":3,"file":"static/js/744.5a842c41.chunk.js","mappings":"wMAEaA,EAAgB,WAC7B,IAAMC,GAAKC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,CAAK,IAInC,OAHFC,QAAQC,IAAI,aAAcJ,IAGjBK,EAAAA,EAAAA,KAAA,KAAAC,SAAG,KACZ,ECyCA,EAlCoB,WAClB,IAAMC,GAAWC,EAAAA,EAAAA,MAOjB,OAJAC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,MACX,GAAG,CAACH,KAGFF,EAAAA,EAAAA,KAAA,WAAAC,UACED,EAAAA,EAAAA,KAACN,EAAa,KASpB,ECzBA,EAPiB,WACf,OACEM,EAAAA,EAAAA,KAAAM,EAAAA,SAAA,CAAAL,UACED,EAAAA,EAAAA,KAACO,EAAW,KAGlB,C","sources":["components/MainDashboard/MainDashboard.jsx","components/ScreensPage/ScreensPage.jsx","pages/HomePage.jsx"],"sourcesContent":["import { useSelector } from \"react-redux\";\n\nexport const MainDashboard = () => {\nconst st = useSelector(state => state)\nconsole.log('state :>> ', st);\n\n\n  return <p>f</p>;\n};\n\n// // 💙💛 Kostiantyn Koshyk\n// import styles from 'styles/index.module.scss';\n// import { BtnAddColumn } from './BtnAddColumn';\n// import { Filters } from './Filters';\n// import { TaskColumn } from './TaskColumn';\n// // import { useEffect } from 'react';\n// // import { useBoards } from 'hooks';\n// import {\n//   useDispatch,\n//   // , useSelector\n// } from 'react-redux';\n// import {\n//   addBoards,\n//   // deleteBoards,\n//   // getAllBoards,\n//   // getBoardById,\n//   // updateBoard,\n// } from 'redux/board/boardOperations';\n// // import {\n//   // addColumn,\n//   // deleteColumn,\n//   // getColumnById,\n//   // getColumns,\n//   // updateColumn,\n// // } from 'redux/column/columnOperations';\n// // import { useColumns } from 'hooks/useColumns';\n// import {\n//   // addTask,\n//   // deleteTask,\n//   // getTasks,\n//   // updateTask,\n// } from 'redux/task/taskOperations';\n// // import { colors } from '@mui/material';\n\n// export const MainDashboard = () => {\n//   // const idBoard = '64f494c005baf51a1e771ede';\n//   // const {\n//   //   // allBoards,\n//   //   boardById,\n//   // } = useBoards();\n//   // const {\n//   //   allColumns,\n//   //   // , columnById, allTasks\n//   // } = useColumns();\n//   // const dispatch = useDispatch();\n\n//   // useEffect(() => {\n//   //   dispatch(getBoardById(idBoard));\n//   //   dispatch(getColumns(idBoard));\n//   //   dispatch(getAllBoards());\n//   //   dispatch(getTasks('64f3b37f79cb8e4510358ae7'));\n//   // }, [dispatch]);\n\n//   // const click = () => {\n//     // ======================================================== Board\n//     // 1. Создать Board\n//     // dispatch(\n//     //   addBoards({\n//     //     title: 'New Board',\n//     //     icon: 'icon-project',\n//     //     background: 'background2',\n//     //   })\n//     // );\n//     // // 2. Удалить Board\n//     // dispatch(deleteBoards('64f39de379cb8e4510358425'));\n//     // 3 Обновить Board\n//     // dispatch(\n//     //   updateBoard({\n//     //     _id: '64f39d8079cb8e45103583f2',\n//     //     title: 'Board update',\n//     //     icon: 'icon-colors',\n//     //     background: 'background1',\n//     //   })\n//     // );\n//     // 4 Получить все Boards\n//     // dispatch(getAllBoards());\n//     // 5 Получить все Boards\n//     // dispatch(getBoardById('64f39de379cb8e4510358425'));\n//     // ============================================================= Column\n//     // 1. Создать Column\n//     // dispatch(\n//     //   addColumn({\n//     //     title: 'New Column',\n//     //     board: '64f3ccb879cb8e4510359091',\n//     //   })\n//     // );\n//     // 2. Удалить Column (передать id колонки)\n//     // dispatch(deleteColumn('64f3cd3c79cb8e45103590af'));\n//     // 3 Обновить Column\n//     // dispatch(\n//     //   updateColumn({ id: '64f3a60f79cb8e45103586b0', title: 'New Column 1' })\n//     // );\n//     // 4 Получить все Column\n//     // dispatch(getColumns());\n//     // 5 Получить колонку по id\n//     // dispatch(getColumnById('64f3a60f79cb8e45103586b0'));\n//     // =============================================================== Tasks\n//     // 1. Создать Task\n//     // dispatch(\n//     //   addTask({\n//     //     title: 'New Task 1',\n//     //     taskOwner: '64f3b37f79cb8e4510358ae7',\n//     //     description: 'task description',\n//     //   })\n//     // );\n//     // 2. Удалить Task (передать id колонки)\n//     // dispatch(deleteTask('64f3a6ba79cb8e451035877c'));\n//     // 3 Обновить Task\n//     // dispatch(\n//     //   updateTask({\n//     //     taskId: '64f237418ad71f5d5364dc4f',\n//     //     title: 'Linda',\n//     //     description: '',\n//     //     priority: '',\n//     //     deadLine: '',\n//     //   })\n//     // );\n//     // 4 Получить все Tsks\n//     // dispatch(getTasks('64f3b37f79cb8e4510358ae7'));\n//   // };\n\n//   // console.log('allBoards :>>>>>>>>>>>>>>>>>> ', allBoards);\n//   // console.log('allColumns :>>>>>>>>>>>>>>>>> ', allColumns);\n//   // console.log('allTasks :>>>>>>>>>>>>>>>>> ', allTasks);\n\n//   // if (!boardById) return;\n\n//   // const { title } = boardById;\n\n//   // const onAddColumn = () => {\n//   //   console.log('Add Column click');\n//   // };\n\n//   return (\n//     <>\n//       <Filters className={styles.KkFilters} />\n//       {/* <button onClick={click}>click</button> */}\n\n//       <ul className={styles.KkColums}>\n//         {/* {allColumns.map(({ _id, title }) => (\n//           <li key={_id}>\n//             <TaskColumn\n//               className={styles.KkTaskColumn}\n//               titleCards={title}\n//               idColumn={_id}\n//             />\n//             <p>id Column: {_id}</p>\n//           </li>\n//         ))} */}\n//         <BtnAddColumn\n//           className={styles.KkBtnAddColumnMain}\n//           title={'Add column'}\n//           theme={'light'}\n//           // onClick={onAddColumn}\n//         />\n//       </ul>\n//     </>\n//   );\n//         }\n","import { useEffect } from 'react';\nimport {\n  useDispatch,\n  // useSelector\n} from 'react-redux';\nimport { getAllBoards } from 'redux/board/boardOperations';\nimport { MainDashboard } from 'components/MainDashboard/MainDashboard';\n// import EditProfile from 'components/EditProfile/EditProfile';\n// import { useAuth } from 'hooks'; // s\n// import AddBoard from './testAddBoard';\n// import { AddCard } from 'components/AddCard';\n// import { Card } from 'components/Card';\n// import NewBoard from 'components/ModalBoard/NewBoard';\n// import { PopColumn } from 'components/PopColumn';\n\nconst ScreensPage = () => {\n  const dispatch = useDispatch();\n  //   const { user } = useAuth();\n  //   console.log(user)\n  useEffect(() => {\n    dispatch(getAllBoards());\n  }, [dispatch]);\n\n  return (\n    <section>\n      <MainDashboard />\n      {/* <EditProfile/> */}\n      {/* <AddBoard /> */}\n      {/* <AddCard /> */}\n      {/* <Card /> */}\n      {/* <NewBoard /> */}\n      {/* <PopColumn /> */}\n    </section>\n  );\n};\n//   return (\n//     <section className={styles.YMScreenReg}>\n//       <div className={styles.AfWelcomRegWr}>\n//         <MainDashboard />\n//         {/* <EditProfile/> */}\n//         <AddBoard />\n//         {/* <AddCard /> */}\n//         {/* <Card /> */}\n//         {/* <NewBoard /> */}\n//         {/* <PopColumn /> */}\n//       </div>\n//     </section>\n//   );\n// };\nexport default ScreensPage;\n","import ScreensPage from 'components/ScreensPage/ScreensPage';\n\nconst HomePage = () => {\n  return (\n    <>\n      <ScreensPage />\n    </>\n  );\n};\nexport default HomePage;\n"],"names":["MainDashboard","st","useSelector","state","console","log","_jsx","children","dispatch","useDispatch","useEffect","getAllBoards","_Fragment","ScreensPage"],"sourceRoot":""}