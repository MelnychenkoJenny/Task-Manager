{"version":3,"file":"static/js/747.be4d53e0.chunk.js","mappings":"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","sources":["components/AddCard/RadioBtns.jsx","components/MainDashboard/Filters.jsx","components/MainDashboard/BtnAddColumn.jsx","components/PopColumn/PopColumn.jsx","components/MainDashboard/BtnAddCard.jsx","components/AddCard/AddCard.jsx","components/MainDashboard/TitleCards.jsx","components/Card/Card.jsx","components/TasksList/TasksList.jsx","components/MainDashboard/MainDashboard.jsx","components/ScreensPage/ScreensPage.jsx","pages/HomePage.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport scss from 'styles/index.module.scss';\nimport { indigo, pink, lightGreen, grey } from '@mui/material/colors';\nimport { FormControlLabel, Typography, Radio } from '@mui/material';\nimport { useAuth } from 'hooks';\nimport { useBoards } from 'hooks';\nimport { useDispatch } from 'react-redux';\nimport { setPriorityFilter } from 'redux/filter/filterSlice';\n\nexport const RadioBtns = ({ parentComponent, priority }) => {  // встановлена раніше та передана сюди пріоритетність для дефолтного стану (у подальшому підлягає редагуванню)\n   const dispatch = useDispatch();\n  const { filter } = useBoards();\n    const { user } = useAuth();\n    const [selectedPriorityFilter, setSelectedPriorityFilter] = useState(filter);\n  const [selectedPriority, setSelectedPriority] = useState(\n    parentComponent === 'FiltersModal'\n      ? 'none'\n      : priority\n      ? priority\n      : 'without'\n  );  \n\n  // console.log('selectedPriority:', selectedPriority);\n  \nuseEffect(() => {\n    dispatch(setPriorityFilter(selectedPriorityFilter));\n  }, [dispatch, selectedPriorityFilter]);\n\n  // if (id) {\n  //   dispatch(\n  //     operation({\n  //       selectedPriority,\n  //       taskOwner: idColumn,\n  //       idTask: id,\n  //       boardId: boardName,\n  //     })\n  //   );\n  // } else {\n  //   dispatch(\n  //     operation({ selectedPriority, taskOwner: idColumn, boardId: boardName })\n  //   );\n  // }\n\n  const controlProps = item => ({\n    // low, medium, high, without\n    value: item,\n    onChange:\n      parentComponent === 'FiltersModal'\n        ? e => setSelectedPriorityFilter(e.target.value)\n        : e => setSelectedPriority(e.target.value),\n    checked:\n      parentComponent === 'FiltersModal'\n        ? selectedPriorityFilter === item\n        : selectedPriority === item,\n    name: 'priority',\n    inputProps: { 'aria-label': item },\n  });\n\n  const priorityStyles = \n    parentComponent === 'FiltersModal' \n    ? {\n        without: grey[400],  \n        low: indigo[200],\n        medium: pink[200],\n        high: lightGreen[200],    \n      }\n    :\n      {\n        low: indigo[200],\n        medium: pink[200],\n        high: lightGreen[200],\n        without: grey[400],      \n      }\n\n  function capitalizeFirstLetter(priority) {\n    return priority.charAt(0).toUpperCase() + priority.slice(1);\n  }\n\n  return (\n    <div>\n      <h3 className={scss.OBFiltersModalLabel}>Label color</h3>\n      <div className={ `${parentComponent === 'FiltersModal' ? scss.OBFiltersModalRadioGroupV : scss.OBFiltersModalRadioGroupH }`}>\n        {Object.keys(priorityStyles).map((priority) => (       //['low', 'medium', 'high', 'without'])\n          <FormControlLabel\n            key={priority}\n            label={ parentComponent === 'FiltersModal' \n              ? (\n                  <Typography \n                    style={{\n                      fontSize: '12px', \n                      fontFamily: 'Poppins, sans-serif', \n                      color: user.theme === 'dark' ? 'rgba(255, 255, 255, 0.50)' : 'rgba(22, 22, 22, 0.50)',\n                    }}\n                    sx={{\n                      '&.Mui-checked': {\n                        color: priorityStyles[priority], // Change label text color when checked\n                      },\n                    }}\n                  >\n                    {priority === 'without' ? 'Without priority' : capitalizeFirstLetter(priority)}\n                  </Typography>\n              ) \n              : null\n            }\n            // labelPlacement={ parentComponent === 'FiltersModal' ? \"end\" : null }\n            className={ parentComponent === 'FiltersModal' ? scss.OBFiltersModalRadioLabelV : scss.OBFiltersModalRadioLabelH}\n            control={\n              <Radio \n                className={scss.OBFiltersModalRadioBtn}\n                {...controlProps(priority)}\n                sx={{\n                  color: priorityStyles[priority],\n                  '&.Mui-checked': {\n                    color: priorityStyles[priority],\n                  },\n                  '&.Mui-checked .MuiSvgIcon-root': {\n                    fontSize: '17px',\n                  },\n                  '&:not(.Mui-checked) .MuiSvgIcon-root': {\n                    fontSize: '14px',\n                    backgroundColor: priorityStyles[priority],\n                    borderRadius: '50%',\n                  },\n                }}\n              />\n            }\n          />\n        ))}\n      </div>\n  </div>\n  );\n};\n","// 💙💛 Kostiantyn Koshyk\nimport { useState, useEffect } from 'react';\nimport styles from 'styles/index.module.scss';\nimport SvgSprite from 'images/sprite.svg';\nimport { useBoards } from 'hooks';\nimport { RadioBtns } from '../AddCard/RadioBtns';\nimport { useAuth } from 'hooks';\n\nimport { useDispatch } from 'react-redux';\nimport { setPriorityFilter } from 'redux/filter/filterSlice';\n\nexport const Filters = ({ className }) => {\n  const dispatch = useDispatch();\n  const [isFilterVisible, setIsFilterVisible] = useState(false);\n  const { boardById } = useBoards();\n  const { user } = useAuth();\n\n  \n  const handleShowAll = () => {\n    dispatch(setPriorityFilter('all'));\n  }\n\n  const onOpenFilter = () => {\n    setIsFilterVisible(true);\n  };\n  const onCloseFilter = () => {\n    setIsFilterVisible(false);\n  }; \n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        setIsFilterVisible(false);\n     };\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [isFilterVisible]);\n\n\n  return (\n    <div className={`${className} ${styles.OBFilterModalContainer}`} data-theme={user.theme}>\n      <div className={styles.KkWrapFilters}>\n        <h2\n          className={styles.KkTitle}\n          style={{ padding: !boardById.background && '4px' }}\n        >\n          {boardById.title}\n        </h2>\n        {/* <h2 className={styles.KkTitle}>{boardById.title}</h2> */}\n\n        <button type='button' className={styles.KkBtnFilters} onClick={onOpenFilter}>\n          <svg width=\"16px\" height=\"16px\">\n            <use href={`${SvgSprite}#icon-filter`}></use>\n          </svg>\n          <p>Filters</p>\n        </button>\n\n        {isFilterVisible && (\n            <div className={styles.OBFiltersModalContainer} style={{ opacity: isFilterVisible ? 1 : 0 }} data-theme={user.theme}>\n              <button type='button' className={styles.OBFilterBtnIcon} aria-label='close' onClick={onCloseFilter}>\n                <svg  width=\"18\" height=\"18\">\n                    <use className='icon' href={SvgSprite + '#icon-close'} />\n                </svg>\n              </button>\n              <h4 className={styles.OBFiltersModalTitle}>Filters</h4>\n              <hr className={styles.OBFiltersModalSeparator} />  \n              <div className={styles.OBFiltersModalContent}>\n                  <RadioBtns parentComponent={'FiltersModal'} />\n                  <p className={styles.OBFiltersModalShow} onClick={handleShowAll}>Show all</p>\n              </div>\n            </div>\n        )} \n      </div>\n    </div>\n  );\n};\n","// 💙💛 Kostiantyn Koshyk\nimport styles from 'styles/index.module.scss';\nimport SvgSprite from 'images/sprite.svg';\nimport clsx from 'clsx';\n\nexport const BtnAddColumn = ({ className, title, theme, onClick }) => {\n  return (\n    <div className={className}>\n      <button\n        className={clsx(styles.KkBtnColumn, styles[theme])}\n        onClick={onClick}\n      >\n        <div className={clsx(styles.KkIconPlusColumn, styles[theme])}>\n          <svg className={clsx(styles[theme])} width=\"14px\" height=\"14px\">\n            <use href={`${SvgSprite}#icon-plus`}></use>\n          </svg>\n        </div>\n        <p className={clsx(styles[theme])}>{title}</p>\n      </button>\n    </div>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport scss from 'styles/index.module.scss';\nimport SvgSprite from 'images/sprite.svg';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useAuth } from 'hooks';\n\nexport const PopColumn = ({\n  modalTitle,\n  modalBtnTitle,\n  onClose,\n  operation,\n  idColumn,\n  infoData,\n}) => {\n  const { user } = useAuth();\n  const boardId = useParams();\n  const dispatch = useDispatch();\n  const [valueInput, setvalueInput] = useState(\n    infoData ? { title: infoData.title } : { title: '' }\n  );\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setvalueInput(prev => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const dataSubmit = idColumn\n      ? {\n          title: valueInput.title,\n          idColumn: idColumn,\n        }\n      : {\n          title: valueInput.title,\n          board: boardId.boardName,\n        };\n    dispatch(operation(dataSubmit));\n\n    onClose();\n  };\n\n  return (\n    <div className={scss.AAColumnContainer} data-theme={user.theme}>\n      <h4 className={scss.AAColumnTitle}>{modalTitle}</h4>\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\n        <label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Title\"\n            autoFocus\n            required\n            className={scss.AAColumnInput}\n            value={valueInput.title || ''}\n            onChange={handleChange}\n          />\n        </label>\n        <button type=\"submit\" className={scss.AAColumnBtn}>\n          <div className={scss.AAColumnSvgContainer}>\n            <svg className={scss.AAColumnSvg}>\n              <use href={SvgSprite + '#icon-plus'} />\n            </svg>\n          </div>\n          {modalBtnTitle}\n        </button>\n      </form>\n    </div>\n  );\n};\n\n// export default PopColumn;\n","// 💙💛 Kostiantyn Koshyk\nimport styles from 'styles/index.module.scss';\nimport SvgSprite from 'images/sprite.svg';\nimport clsx from 'clsx';\n\nexport const BtnAddCard = ({ title, className, theme, onClick }) => {\n  return (\n    <div className={className}>\n      <button\n        className={clsx(styles.KkBtnCard, styles[theme])}\n        onClick={onClick}\n      >\n        <div className={clsx(styles.KkIconPlusCard, styles[theme])}>\n          <svg className={clsx(styles[theme])} width=\"14px\" height=\"14px\">\n            <use href={`${SvgSprite}#icon-plus`}></use>\n          </svg>\n        </div>\n        <p className={clsx(styles[theme])}>{title}</p>\n      </button>\n    </div>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport scss from 'styles/index.module.scss';\nimport SvgSprite from 'images/sprite.svg';\nimport { useAuth } from 'hooks';\n// import { indigo, pink, lightGreen, grey } from '@mui/material/colors';\nimport { /*Radio,*/ InputAdornment } from '@mui/material';\nimport dayjs from 'dayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { useParams } from 'react-router-dom';\nimport { RadioBtns } from './RadioBtns';\n\n\nexport const AddCard = ({\n  modalTitle,\n  idColumn,\n  id,\n  cardTitle,\n  description,\n  priority,\n  deadline,\n  modalBtnTitle,\n  onClose,\n  operation,\n}) => {\n  const { user } = useAuth();\n  const dispatch = useDispatch();\n  const { boardName } = useParams();\n\n  const [titleValue, setTitleValue] = useState(cardTitle); // для редагування\n  const [descriptionValue, setDescriptionValue] = useState(description); // для редагування\n  // const [selectedPriority, setSelectedPriority] = useState(\n  //   priority ? priority : 'without'\n  // );\n  const [inputWidth, setInputWidth] = useState('auto');\n  const [isCalendarOpen, setIsCalendarOpen] = useState(false);\n  const [selectedDate, setSelectedDate] = useState(\n    deadline ? dayjs(deadline, 'DD/MM/YYYY') : dayjs()\n  ); // dayjs() - currentDate\n\n  //selectedDate = M {$L: 'en', $u: undefined, $d: Tue Aug 29 2023 08:05:53 GMT+0300 (за східноєвропейським літнім часом), $x: {…}, $y: 2023, …}\n  // deadline ? dayjs(deadline, 'DD/MM/YYYY').format(\"dddd, MMMM D\") : dayjs()\n\n  // console.log(deadline) //01/09/2023\n  // console.log(dayjs(deadline)) // M {... Mon Jan 09 2023 00:00:00 ...} - міняє день і місяць місцями\n  // console.log(dayjs(deadline, 'DD/MM/YYYY')); // M {... Fri Sep 01 2023 00:00:00 ...} - тепер все Ок\n  // Тепер бібліотека Material UA застосує формат \"dddd, MMMM D\" і отримаємо те, що треба:\n  // console.log(dayjs(deadline, 'DD/MM/YYYY').format(\"dddd, MMMM D\")); // Thursday, August 31\n\n  // \"Today, September 01\" або \"Saturday, September 02\"\n  const dateFormat =\n    dayjs(selectedDate).format('dddd, MMMM D') ===\n    dayjs().format('dddd, MMMM D')\n      ? '[Today,] MMMM D'\n      : 'dddd, MMMM D';\n\n  //------------------------------------- Submit -------------------------------------------\n\n  const handleFormSubmit = event => {\n    // відправка даних\n    event.preventDefault();\n\n    const inputTitle = event.target.elements.title.value.trim();\n    let inputDescription = event.target.elements.description.value.trim();\n    const inputPriority = event.target.elements.priority.value;\n    const inputDeadline = dayjs(selectedDate).format('DD/MM/YYYY'); //   29/11/2023\n\n    if (inputDescription === '') {\n      inputDescription = ' ';\n    }\n\n    const cardData = {\n      title: inputTitle,\n      description: inputDescription,\n      priority: inputPriority,\n      deadLine: inputDeadline,\n    };\n    // {title: 'The Watch Spot Design', description: \"Create a visually stunning and eye-catching watch dial design that embodies our brand's\", priority: 'without', deadline: '11/10/2023', taskOwner: '64f548eb24765a1e4837366e'}\n    // відправка на бекенд, а потім в стор редакса\n    if (id) {\n      dispatch(\n        operation({\n          ...cardData,\n          taskOwner: idColumn,\n          idTask: id,\n          boardId: boardName,\n        })\n      );\n    } else {\n      dispatch(\n        operation({ ...cardData, taskOwner: idColumn, boardId: boardName })\n      );\n    }\n\n    event.target.reset();\n\n    if (event.currentTarget === event.target) {\n      onClose();\n      document.body.style.overflow = 'visible'; //body почне скролитися після закриття модалки\n    }\n  };\n\n  // --------------- пріоритетність ----------------------\n\n  // const controlProps = item => ({\n  //   // low, medium, high, without\n  //   value: item,\n  //   onChange: e => setSelectedPriority(e.target.value),\n  //   checked: selectedPriority === item,\n  //   name: 'priority',\n  //   inputProps: { 'aria-label': item },\n  // });\n\n  // const priorityStyles = {\n  //   low: indigo[200],\n  //   medium: pink[200],\n  //   high: lightGreen[200],\n  //   without: grey[400],\n  // };\n\n  //------------------ Ширина інпута DatePicker---------------------\n  useEffect(() => {\n    const contentWidth = selectedDate.format(dateFormat).length * 9;\n    setInputWidth(`${contentWidth}px`);\n  }, [selectedDate, dateFormat]);\n\n\n  return (\n    <div className={scss.OBAddContainer} data-theme={user.theme}>\n      <h4 className={scss.OBAddTitle}>{modalTitle}</h4>\n      <form onSubmit={handleFormSubmit} autoComplete=\"off\">\n        <label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Title\"\n            autoFocus\n            required\n            className={scss.OBAddInput}\n            defaultValue={titleValue} // для редагування\n            onChange={e => setTitleValue(e.target.value)} // для редагування\n          />\n        </label>\n        <label>\n          <textarea\n            type=\"text\"\n            name=\"description\"\n            placeholder=\"Description\"\n            className={`${scss.OBAddInput} ${scss.OBAddDescription}`}\n            defaultValue={descriptionValue} // для редагування\n            onChange={e => setDescriptionValue(e.target.value)} // для редагування\n          />\n        </label>\n\n        <RadioBtns parentComponent={'AddCard'} priority={priority} />\n\n        {/* <div className={scss.OBAddlabel}>\n          Label color\n          <div className={scss.OBAddRadioGroup}>\n            {Object.keys(priorityStyles).map(\n              (\n                priority //['low', 'medium', 'high', 'without']\n              ) => (\n                <Radio\n                  className={scss.OBAddradioBtn}\n                  key={priority}\n                  {...controlProps(priority)}\n                  sx={{\n                    color: priorityStyles[priority],\n                    '&.Mui-checked': {\n                      color: priorityStyles[priority],\n                    },\n                    '&.Mui-checked .MuiSvgIcon-root': {\n                      fontSize: '17px',\n                    },\n                    '&:not(.Mui-checked) .MuiSvgIcon-root': {\n                      fontSize: '14px',\n                      backgroundColor: priorityStyles[priority],\n                      borderRadius: '50%',\n                    },\n                  }}\n                />\n              )\n            )}\n          </div>\n        </div> */}\n\n        <div>\n          <p className={scss.OBAddlabel}>Deadline</p>\n          <LocalizationProvider dateAdapter={AdapterDayjs}>\n            {/* dateAdapter={AdapterDayjs} - вказуємо, що під капотом використовуємо бібліотеку Day.js (її методи) */}\n            <DatePicker\n              open={isCalendarOpen}\n              onClose={() => setIsCalendarOpen(false)} // закриття календаря\n              onChange={date => setSelectedDate(date)} //Material UA в date записує обрану з календаря дату\n              // M {$L: 'en', $u: undefined, $d: Fri Sep 01 2023 09:13:29 GMT+0300 (за східноєвропейським літнім часом), $x: {…}, $y: 2023, …}\n              value={selectedDate}\n              format={dateFormat} // приймає рядок\n              disablePast={true} // минулі дати не обируться\n              outsideCurrentMonth={true} // початок наступного місяця невидимий\n              dayOfWeekFormatter={day => day.slice(0, 2).toUpperCase()} // видимі перші 2 літери назви дня тижня\n              slots={{\n                openPickerButton: () => null, // приховуємо дефолтну кнопку-іконку календаря\n              }}\n              slotProps={{\n                popper: {\n                  placement: 'bottom-start',\n                  sx: {\n                    '.css-71vzt-MuiPaper-root-MuiPickersPopper-paper': { // полотно календаря\n                      // backgroundColor: 'red', // працює\n                      border: '1px solid',\n                      borderColor: user.theme === 'violet' ? '#585bbe' : '#bedfad',\n                      borderRadius: '8px',\n                      padding: '18px',\n                      width: '233px',\n                      height: '254px',\n                    },\n                    '.MuiPickersLayout-root.': {\n                      width: '197px',\n                      // hight: '110px',\n                    },\n                    '.MuiDateCalendar-root': {\n                      // полотно календаря без зовнішніх падінгів\n                      // backgroundColor: 'orange',\n                      width: '197px',\n                      hight: '166px',\n                    },\n\n                    '.css-cwhad8-MuiDateCalendar-root': {  // полотно календаря без зовнішніх падінгів\n\n                      height: '215px',\n                    },\n                    '.MuiPickersLayout-contentWrapper': {\n                      width: '197px',\n                      // hight: '166px',\n                    },\n                    '.MuiPickersCalendarHeader-root': {\n                      // місяць і дата\n                      // backgroundColor: 'yellowgreen',\n                      textAlign: 'center',\n                      borderBottom: '1px solid rgba(22, 22, 22, 0.20)',\n                    },\n                    '.MuiPickersCalendarHeader-label': {\n                      margin: 0,\n                    },\n                    '.MuiTypography-root': {\n                      // дні тижня\n                      // backgroundColor: 'violet',\n                      marginTop: '14px',\n                      width: '23px',\n                      height: '23px',\n                    },\n                    '.MuiDayCalendar-monthContainer': {\n                      // полотно дат\n                      // backgroundColor: 'red',\n                      width: '197px',\n                      hight: '166px',\n                    },\n                    '.MuiDayCalendar-weekContainer': {\n                      // backgroundColor: 'blue',\n                      marginBottom: '3px',\n                    },\n                    '.MuiPickersDay-dayWithMargin': {\n                      // дні іншого місяця\n                      width: '23px',\n                      height: '23px',\n                    },\n                    '.MuiButtonBase-root': {\n                      // один день\n                      width: '23px',\n                      height: '23px',\n                    },\n                    '.MuiPickersDay-root': {\n                      // усі дні\n                      // backgroundColor: 'green',\n                      fontFamily: 'Poppins',\n                      fontSize: '14px',\n                      fontweight: '400',\n                      lineHeight: '18px',\n                    },\n                    '.MuiPickersDay-root.Mui-selected': {\n                      // вибраний день\n                      backgroundColor:\n                        user.theme === 'violet' ? '#585bbe' : '#bedfad',\n                      '&:hover': {\n                        backgroundColor:\n                          user.theme === 'violet' ? '#8d8fc9' : '#9fd186',\n                      },\n                    },\n                  },\n                },\n                calendarHeader: {\n                  sx: {\n                    '.MuiPickersCalendarHeader-root': {\n                      position: 'relative',\n                    },\n                    '.MuiPickersCalendarHeader-labelContainer': {\n                      // це тільки місяць і рік\n                      // backgroundColor: 'green',\n                      fontFamily: 'Poppins, sans-serif',\n                      fontSize: '16px',\n                      fontWeight: 500,\n                      letterSpacing: '-0.32px',\n                      display: 'grid', // тепер місяць і рік центровані\n                    },\n                    '.MuiPickersCalendarHeader-label': {\n                      display: 'inline-block',\n                    },\n                    '.MuiPickersCalendarHeader-switchViewButton': {\n                      display: 'none', // прибираємо стрілку вниз поряд з місяцем і роком\n                    },\n                    '.MuiIconButton-edgeEnd': {\n                      // кнопка <\n                      position: 'absolute',\n                      top: '17px',\n                      left: '14px',\n                    },\n                    '.MuiIconButton-edgeStart': {\n                      // кнопка >\n                      position: 'absolute',\n                      top: '17px',\n                      right: '12px',\n                    },\n                  },\n                  style: {\n                    display: 'inline',\n                    margin: 0,\n                    padding: 0,\n                  },\n                },\n\n                previousIconButton: {\n                  sx: {\n                    stroke: user.theme === 'violet' ? '#5255BC' : '#BEDBB0',\n                  },\n                },\n                nextIconButton: {\n                  sx: {\n                    stroke: user.theme === 'violet' ? '#5255BC' : '#BEDBB0',\n                  },\n                },\n\n                textField: {\n                  fullWidth: false,\n                  onClick: () => setIsCalendarOpen(true), // інпут стає клікабельним; по кліку відкривається календар (picker)\n                  variant: 'standard',\n                  size: 'small',\n                  sx: {\n                    width: inputWidth,\n                    minWidth: '130px',\n                    '.css-nz481w-MuiInputBase-input-MuiInput-input': {\n                      // інпут без кнопки\n                      padding: 0,\n                    },\n                  },\n                  InputProps: {\n                    disableUnderline: true, // прибирає дефолтний нижній бордер, встановлений variant: 'standard'\n                    'aria-label': 'deadline',\n                    style: {\n                      fontSize: '14px',\n                      fontFamily: 'Poppins, sans-serif',\n                      color: user.theme === 'violet' ? '#5255BC' : '#BEDBB0', // колір тексту\n                      fontWeight: 500,\n                    },\n                    // розташування іконки - в кінці інпуту (є і startAdornment)\n                    endAdornment: (\n                      <InputAdornment\n                        position=\"start\"\n                        sx={{ cursor: 'pointer' }}\n                      >\n                        <svg className={scss.OBAddDateIcon} width=\"18px\">\n                          <use\n                            href={SvgSprite + '#icon-chevron-down'} // стрілка вниз в календарі\n                            aria-label=\"open calendar\"\n                            edge=\"start\"\n                          />\n                        </svg>\n                      </InputAdornment>\n                    ),\n                  },\n                },\n              }}\n            ></DatePicker>\n          </LocalizationProvider>\n        </div>\n\n        <button type=\"submit\" className={scss.OBAddSubmitBtn}>\n          <div className={scss.OBAddIconWrapper}>\n            <svg className={scss.OBAddSubmitIcon}>\n              <use href={SvgSprite + '#icon-plus'} />\n            </svg>\n          </div>\n          {modalBtnTitle}\n        </button>\n      </form>\n    </div>\n  );\n};","// 💙💛 Kostiantyn Koshyk\nimport styles from 'styles/index.module.scss';\nimport SvgSprite from 'images/sprite.svg';\nimport clsx from 'clsx';\n// import { cleanDigitSectionValue } from '@mui/x-date-pickers/internals/hooks/useField/useField.utils';\n\nexport const TitleCards = ({ className, title, theme, onEdit, onTrash }) => {\n  // const onIconPensil = () => {\n  //   console.log('icon pensil click');\n  // };\n\n  // const onIconTrash = () => {\n  //   console.log('icon trash click');\n  // };\n\n  return (\n    <div className={className}>\n      <div className={clsx(styles.KkWrapTitleCards, styles[theme])}>\n        <p className={clsx(styles[theme])}> {title}</p>\n        <div className={styles.KkSvgTitleCards}>\n          <button className={styles.KkBtnIcons} onClick={onEdit}>\n            <svg className={clsx(styles[theme])} width=\"16px\" height=\"16px\">\n              <use href={`${SvgSprite}#icon-pencil`}></use>\n            </svg>\n          </button>\n\n          <button className={styles.KkBtnIcons} onClick={onTrash}>\n            <svg className={clsx(styles[theme])} width=\"16px\" height=\"16px\">\n              <use href={`${SvgSprite}#icon-trash`}></use>\n            </svg>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport dayjs from 'dayjs';\nimport { Modal } from '../Modal/Modal';\nimport { AddCard } from '../AddCard/AddCard';\nimport scss from 'styles/index.module.scss';\nimport SvgSprite from 'images/sprite.svg';\nimport { deleteTasks, updateTasks } from 'redux/board/boardOperations';\nimport { useParams } from 'react-router-dom';\nimport { useAuth, useBoards } from 'hooks';\n\nconst getBgColor = (priority, color) => {\n  switch (priority) {\n   case 'low':\n     return '#8FA1D0';\n   case 'medium':\n     return 'rgba(224, 156, 181, 1)';\n   case 'high':\n     return '#BEDBB0';\n   case 'without':\n     return color; //'rgba(22, 22, 22, 0.30)'; //rgba(255, 255, 255, 0.30)\n   default:\n    break;\n  }    \n }\n\n\nconst Card = ({ id, cardTitle, description, priority, deadline, idColumn }) => {\n  const { user } = useAuth();\n  const { columns } = useBoards();\n  const { boardName } = useParams();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isOverflowVisible, setOverflowVisible] = useState(false); // управління станом відкриття тексту\n  const dispatch = useDispatch();\n  const deadlineIsToday = dayjs().format('DD/MM/YYYY') === deadline; // dayjs().format('DD/MM/YYYY') - сьогоднішня дата у визначеному форматі\n  const [isPopupVisible, setisPopupVisible] = useState(false);\n\n  const handleOpenModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleDescClick = () => {\n    setOverflowVisible(!isOverflowVisible);\n  };\n\n  const onOpenPopup = () => {\n    setisPopupVisible(true);\n  };\n\n  const onClosePopup = () => {\n    setisPopupVisible(false);\n  }; \n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        setisPopupVisible(false);\n     };\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [isPopupVisible]);\n\n  const onColumnChange = () => {\n    console.log('Here we change a column')\n    onClosePopup();\n\n  }; \n\n  return (\n    <div style={{ borderLeftColor: getBgColor(priority, user.theme === 'dark' ? 'rgba(255, 255, 255, 0.30)' : 'rgba(22, 22, 22, 0.30)') }} className={scss.OBCardContainer} data-theme={user.theme}>\n\n      <h4 className={scss.OBCardTitle}>{cardTitle}</h4>\n      <p className={`${scss.OBCardDescription}  ${isOverflowVisible ? scss.OBCardDescriptionFull : scss.OBCardDescriptionShort}`} onClick={handleDescClick}>{description}</p>\n\n      <hr className={scss.OBCardSeparator} />\n\n      <div className={scss.OBCardFooterContainer}>\n        <table className={scss.OBCardValuesContainer}>\n          <thead>\n            <tr>\n              <th className={scss.OBCardProreties}>Priority</th>\n              <th className={scss.OBCardProreties}>Deadline</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>\n                <div\n                  style={{ backgroundColor: getBgColor(priority, user.theme === 'dark' ? 'rgba(255, 255, 255, 0.30)' : 'rgba(22, 22, 22, 0.30)') }}\n                  className={scss.OBCardPriorityCircle}\n                ></div>\n              </td>\n              <td className={scss.OBCardDate}>{deadline}</td>\n            </tr>\n          </tbody>\n        </table>\n\n        {/* --------------------------- іконки --------------------------- */}\n\n        <div className={scss.OBCardIconsWrapper}>\n          {deadlineIsToday &&\n            (<svg className={scss.OBCardBellIcon} width=\"16\" height=\"16\" style={{ stroke: user.theme === 'violet' ? '#585bbe' : '#bedfad' }}>\n\n              <use href={SvgSprite + '#icon-bell'} />\n            </svg>\n          )}\n          <button\n            type=\"button\"\n            className={scss.OBCardBtnIcon}\n            aria-label=\"edit task\"\n            onClick={handleOpenModal}\n          >\n            <svg width=\"16\" height=\"16\">\n              <use href={SvgSprite + '#icon-pencil'} />\n            </svg>\n          </button>\n          {isModalOpen && (\n            <Modal isOpen={isModalOpen} onClose={handleCloseModal}>\n              <AddCard\n                idColumn={idColumn}\n                modalTitle={'Edit card'}\n                id={id}\n                cardTitle={cardTitle}\n                description={description}\n                priority={priority}\n                deadline={deadline}\n                modalBtnTitle={'Edit'}\n                operation={updateTasks}\n                onClose={handleCloseModal}\n              />\n            </Modal>\n          )}\n          <button type='button' className={scss.OBCardBtnIcon} onClick={onOpenPopup} aria-label='move task to another column'>\n            <svg width=\"16\" height=\"16\">\n              <use href={SvgSprite + '#icon-arrow'} />\n            </svg>\n          </button >\n          {isPopupVisible && (\n              <div className={scss.OBCardPopupContainer}>\n                  <ul className={scss.OBCardPopupList}>\n                    {columns &&\n                        columns.map(({ _id, title }) => (\n                          <li key={_id} className={scss.OBCardPopupItem}>\n                            <p className={scss.OBCardPopupText}>{title}</p>\n                            <button\n                                type=\"button\"\n                                className={scss.OBCardBtnIcon}\n\n                                aria-label=\"change column\"\n                                onClick={onColumnChange}\n                            >\n                                <svg width=\"16\" height=\"16\">\n                                  <use href={SvgSprite + '#icon-arrow'} />\n\n                                </svg>\n                            </button>\n                          </li>\n                        ))\n                      }\n                  </ul>\n              </div>\n          )}\n          <button\n            type=\"button\"\n            className={scss.OBCardBtnIcon}\n            aria-label=\"delete task\"\n            onClick={() => dispatch(deleteTasks({ id, boardName }))}\n          >\n            <svg width=\"16\" height=\"16\">\n              <use href={SvgSprite + '#icon-trash'} />\n            </svg>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import { Card } from 'components/Card';\nimport styles from 'styles/index.module.scss';\nimport { useBoards } from 'hooks';\n\nexport const TasksList = ({allTasks: tasks, idColumn:_id}) => {\nconst {  filter: priority } = useBoards();\n\n  const filteredTasks =\n  priority === 'all'\n    ? tasks\n    : tasks.filter(task => {\n        return task?.priority === priority;\n      });\n\n    return (<ul className={styles.KkCards}>\n        {filteredTasks.map(\n          ({\n            title: titleCard,\n            description,\n            priority,\n            deadLine,\n            _id: idCard,\n          }) => {\n            return (\n              <li key={idCard}>\n                <Card\n                  cardTitle={titleCard}\n                  id={idCard}\n                  description={description}\n                  priority={priority}\n                  deadline={deadLine}\n                  idColumn={_id}\n                />\n              </li>\n            );\n          }\n        )}\n      </ul>\n    )\n}","// 💙💛 Kostiantyn Koshyk\nimport { Filters } from './Filters';\nimport styles from 'styles/index.module.scss';\nimport { BtnAddColumn } from './BtnAddColumn';\nimport { Modal } from '../Modal/Modal';\nimport { useState } from 'react';\nimport { PopColumn } from '../PopColumn/PopColumn';\nimport {\n  addColumn,\n  addTasks,\n  deleteColumn,\n  editColumn,\n} from 'redux/board/boardOperations';\nimport { useDispatch } from 'react-redux';\nimport { useBoards } from 'hooks';\n// import SvgSprite from 'images/sprite.svg';\nimport { BtnAddCard } from './BtnAddCard';\nimport { AddCard } from 'components/AddCard/AddCard';\n\nimport { TitleCards } from './TitleCards';\nimport {imagesBg} from 'images/image-url'\nimport { TasksList } from 'components/TasksList';\n\nexport const MainDashboard = () => {\n  const { columns, boardById } = useBoards();\n  const windowInnerWidth = window.innerWidth;\n  const windowInnerHeight = window.innerHeight;\n  const dispatch = useDispatch();\n\n\n// console.log('boardById :>> ', boardById.background);\n  const [isModalAddOpen, setIsModalAddOpen] = useState(false);\n  const [isModalEditOpen, setIsModalEditOpen] = useState(false);\n  const [isModalAddCardOpen, setIsModalAddCardOpen] = useState(false);\n  const [activeColumnId, setActiveColumnId] = useState('');\n  const [titleColumnId, setTitleColumnId] = useState('');\n\n  //!! Тут на всі відкриття і закриття модалок можна зробити switch\n  const handleOpenAddModal = () => {\n    setIsModalAddOpen(true);\n  };\n  const handleCloseAddModal = () => {\n    setIsModalAddOpen(false);\n  };\n\n  const handleOpenEditModal = () => {\n    setIsModalEditOpen(true);\n  };\n  const handleCloseEditModal = () => {\n    setIsModalEditOpen(false);\n  };\n\n  const handleOpenAddCardModal = () => {\n    setIsModalAddCardOpen(true);\n  };\n  const handleCloseAddCardModal = () => {\n    setIsModalAddCardOpen(false);\n  };\n\n  const clickOnColumnItemHandle = columnId => {\n    setActiveColumnId(columnId);\n  };\n\n  const clickOnColumnTitleHandle = title => {\n    setTitleColumnId(title);\n  };\n\n  const bg= imagesBg?.find(image => image.name === boardById.background)\n  // console.log('bg :>> ', bg?.mobile);\n  const containerStyle = {\n    // height: '100vh',\n    maxHeight: '100%',\n    backgroundImage: `url(${bg?.mobile})`,\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    width:\n          windowInnerWidth > 1200\n            ? `calc(${windowInnerWidth}px - ${270}px)`\n            : `${windowInnerWidth}px`,\n        height:\n          windowInnerWidth > 768\n            ? `calc(${windowInnerHeight}px - ${68}px)`\n            : `calc(${windowInnerHeight}px - ${60}px)`,\n    \n  };\n\n  if (window.innerWidth >= 768) {\n    containerStyle.backgroundImage = `url(${bg?.tablet})`;\n  }\n\n  if (window.innerWidth >= 1440) {\n    containerStyle.backgroundImage = `url(${bg?.desktop})`;\n  }\n\n  return (\n    <div className={styles.KkSectionMainDashboard} style={containerStyle} >\n      <Filters className={styles.KkFilters} />\n\n      <ul className={styles.KkColums}>\n        {columns &&\n          columns.map(({ _id, title, tasks }) => (\n            <li key={_id}>\n              {/* <p>title Column: {title}</p> */}\n              <TitleCards\n                className={styles.TitleCards}\n                title={title}\n                onEdit={() => {\n                  handleOpenEditModal();\n                  clickOnColumnItemHandle(_id);\n                  clickOnColumnTitleHandle(title);\n                }}\n                onTrash={() => dispatch(deleteColumn(_id))}\n              />\n\n              {/* <div className={styles.boardsListItemButtons}>\n                <button\n                  type=\"button\"\n                  className={styles.boardsListItemButton}\n                  onClick={() => {\n                    handleOpenEditModal();\n                    clickOnColumnItemHandle(_id);\n                    clickOnColumnTitleHandle(title);\n                  }}\n                >\n                  <svg\n                    className={styles.boardsListItemSvg}\n                    width=\"16px\"\n                    height=\"16px\"\n                  >\n                    <use href={`${SvgSprite}#icon-pencil`}></use>\n                  </svg>\n                </button>\n                <button\n                  type=\"button\"\n                  className={styles.boardsListItemButton}\n                  onClick={() => dispatch(deleteColumn(_id))}\n                >\n                  <svg\n                    className={styles.boardsListItemSvg}\n                    width=\"16px\"\n                    height=\"16px\"\n                  >\n                    <use href={`${SvgSprite}#icon-trash`}></use>\n                  </svg>\n                </button>\n              </div> */}\n\n              {tasks && (\n                <TasksList allTasks={tasks} idColumn={_id}/>\n                )}\n              <BtnAddCard\n                // className={styles.KkBtnAddColumnMain}\n                className={styles.KkBtnAddCard}\n                title={'Add another card'}\n                theme={'light'}\n                onClick={() => {\n                  handleOpenAddCardModal();\n                  clickOnColumnItemHandle(_id);\n                }}\n              />\n            </li>\n          ))}\n        <BtnAddColumn\n          className={styles.KkBtnAddColumnMain}\n          title={'Add another column'}\n          theme={'light'}\n          onClick={handleOpenAddModal}\n        />\n      </ul>\n      {isModalAddOpen && (\n        <Modal isOpen={isModalAddOpen} onClose={handleCloseAddModal}>\n          <PopColumn\n            modalTitle={'Add column'}\n            modalBtnTitle={'Add'}\n            onClose={handleCloseAddModal}\n            operation={addColumn}\n          />\n        </Modal>\n      )}\n      {isModalEditOpen && (\n        <Modal isOpen={isModalEditOpen} onClose={handleCloseEditModal}>\n          <PopColumn\n            modalTitle={'Edit column'}\n            modalBtnTitle={'Add'}\n            onClose={handleCloseEditModal}\n            idColumn={activeColumnId}\n            infoData={{ title: titleColumnId }}\n            operation={editColumn}\n          />\n        </Modal>\n      )}\n      {isModalAddCardOpen && (\n        <Modal isOpen={isModalAddCardOpen} onClose={handleCloseAddCardModal}>\n          <AddCard\n            modalTitle={'Add card'}\n            modalBtnTitle={'Add'}\n            onClose={handleCloseAddCardModal}\n            idColumn={activeColumnId}\n            operation={addTasks}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getAllBoards, getBoardById } from 'redux/board/boardOperations';\nimport { MainDashboard } from 'components/MainDashboard/MainDashboard';\nimport { useParams } from 'react-router-dom';\n\nconst ScreensPage = () => {\n  const dispatch = useDispatch();\n  const { boardName } = useParams();\n\n  useEffect(() => {\n    dispatch(getAllBoards());\n    dispatch(getBoardById(boardName));\n  }, [boardName, dispatch]);\n\n  return (\n    <section>\n      <MainDashboard />\n    </section>\n  );\n};\nexport default ScreensPage;\n","import ScreensPage from 'components/ScreensPage/ScreensPage';\n\nconst HomePage = () => {\n  return (\n    <>\n      <ScreensPage />\n    </>\n  );\n};\nexport default HomePage;\n"],"names":["RadioBtns","_ref","parentComponent","priority","dispatch","useDispatch","filter","useBoards","user","useAuth","_useState","useState","_useState2","_slicedToArray","selectedPriorityFilter","setSelectedPriorityFilter","_useState3","_useState4","selectedPriority","setSelectedPriority","useEffect","setPriorityFilter","priorityStyles","without","grey","low","indigo","medium","pink","high","lightGreen","capitalizeFirstLetter","charAt","toUpperCase","slice","_jsxs","children","_jsx","className","scss","concat","Object","keys","map","FormControlLabel","label","Typography","style","fontSize","fontFamily","color","theme","sx","control","Radio","_objectSpread","item","value","onChange","e","target","checked","name","inputProps","backgroundColor","borderRadius","Filters","isFilterVisible","setIsFilterVisible","boardById","handleKeyDown","code","window","addEventListener","removeEventListener","styles","padding","background","title","type","onClick","width","height","href","SvgSprite","opacity","BtnAddColumn","clsx","PopColumn","modalTitle","modalBtnTitle","onClose","operation","idColumn","infoData","boardId","useParams","valueInput","setvalueInput","onSubmit","preventDefault","dataSubmit","board","boardName","autoComplete","placeholder","autoFocus","required","event","_event$target","prev","_defineProperty","BtnAddCard","AddCard","id","cardTitle","description","deadline","titleValue","setTitleValue","descriptionValue","setDescriptionValue","_useState5","_useState6","inputWidth","setInputWidth","_useState7","_useState8","isCalendarOpen","setIsCalendarOpen","_useState9","dayjs","_useState10","selectedDate","setSelectedDate","dateFormat","format","contentWidth","length","inputTitle","elements","trim","inputDescription","cardData","deadLine","taskOwner","idTask","reset","currentTarget","document","body","overflow","defaultValue","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","open","date","disablePast","outsideCurrentMonth","dayOfWeekFormatter","day","slots","openPickerButton","slotProps","popper","placement","border","borderColor","hight","textAlign","borderBottom","margin","marginTop","marginBottom","fontweight","lineHeight","calendarHeader","position","fontWeight","letterSpacing","display","top","left","right","previousIconButton","stroke","nextIconButton","textField","fullWidth","variant","size","minWidth","InputProps","disableUnderline","endAdornment","InputAdornment","cursor","edge","TitleCards","onEdit","onTrash","getBgColor","columns","isModalOpen","setIsModalOpen","isOverflowVisible","setOverflowVisible","deadlineIsToday","isPopupVisible","setisPopupVisible","handleCloseModal","onColumnChange","console","log","borderLeftColor","Modal","isOpen","updateTasks","_ref2","_id","deleteTasks","TasksList","tasks","allTasks","filteredTasks","task","titleCard","idCard","Card","MainDashboard","_useBoards","windowInnerWidth","innerWidth","windowInnerHeight","innerHeight","isModalAddOpen","setIsModalAddOpen","isModalEditOpen","setIsModalEditOpen","isModalAddCardOpen","setIsModalAddCardOpen","activeColumnId","setActiveColumnId","titleColumnId","setTitleColumnId","handleCloseAddModal","handleCloseEditModal","handleCloseAddCardModal","clickOnColumnItemHandle","columnId","bg","imagesBg","image","containerStyle","maxHeight","backgroundImage","mobile","backgroundSize","backgroundRepeat","backgroundPosition","tablet","desktop","clickOnColumnTitleHandle","deleteColumn","addColumn","editColumn","addTasks","getAllBoards","getBoardById","_Fragment","ScreensPage"],"sourceRoot":""}